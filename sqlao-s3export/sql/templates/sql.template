{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys Windows Server Failover Clustering (WSFC) and SQL Server AlwaysOn Availability Group nodes. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "NumberOfSubnets",
                        "PrivateSubnetAssignment",
                        "ADServersPrivateIP"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "UniqueID"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft Active Directory Configuration"
                    },
                    "Parameters": [
                        "CreateNewAD",
                        "DomainDNSName",
                        "DomainAdminUser",
                        "DomainAdminPasswordKey",
                        "DomainMemberSGID",
                        "WSFClusterName"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft SQL Server Configuration"
                    },
                    "Parameters": [
                        "SQLAMIID",
                        "SQLServerVersion",
                        "SQLServiceAccount",
                        "SQLServiceAccountPasswordKey",
                        "SQLLicenseProvided",
                        "Volume1Size",
                        "Volume1Type",
                        "Volume1DeviceName",
                        "Volume1DriveLetter",
                        "Volume1DriveType",
                        "Volume2Size",
                        "Volume2Type",
                        "Volume2DeviceName",
                        "Volume2DriveLetter",
                        "Volume2DriveType",
                        "Volume3Size",
                        "Volume3Type",
                        "Volume3DeviceName",
                        "Volume3DriveLetter",
                        "Volume3DriveType",
                        "VolumeIopsValues",
                        "RootDriveSize",
                        "RootDriveType",
                        "SQLNodeTagPairs",
                        "NumberOfSQLNodeTags",
                        "VolumeTagPairs",
                        "NumberOfVolumeTags",
                        "VersionsRange",
                        "TempDBonInstanceStore"
                    ]
                },
                {
                    "Label": {
                        "default": "Failover Cluster Configuration"
                    },
                    "Parameters": [
                        "NumberOfNodes",
                        "WSFCNodeInstanceType",
                        "NodeNetBIOSNames",
                        "NodeAccessTypes"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Launch Wizard Configuration"
                    },
                    "Parameters": [
                        "AssetsBucketName",
                        "AssetsS3KeyPrefix"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "Ec2RoleName": {
            "Default": "",
            "Description": "Role name for EC2 instance profile",
            "Type": "String"
        },
        "UniqueID": {
            "Default": "UID123",
            "Description": "Automation Execution Unique Id.",
            "Type": "String"
        },
        "VPCCIDR": {
            "Default": "",
            "Description": "The VPC CIDR.",
            "Type": "String"
        },
        "LaunchWizardModuleName": {
            "Default": "LaunchWizard",
            "Description": "Name of module that holds all LaunchWizard DSC resources (must be same as in all scripts)",
            "Type": "String"
        },
        "SQLHAPreConfigModuleName": {
            "Default": "SQLHA",
            "Description": "Name of module that holds all SQLHA DSC resources applied preconfig (must be same as in all scripts)",
            "Type": "String"
        },
        "SQLHAPostConfigModuleName": {
            "Default": "SQLAddAdmins",
            "Description": "Name of module that holds all DSC resources applied postconfig(must be same as in all scripts)",
            "Type": "String"
        },
        "LogGroupName": {
            "Default": "",
            "Description": "Log Group Name.",
            "Type": "String"
        },
        "EnableLogFeature": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "If Log Feature has been required",
            "Type": "String"
        },
        "CreateNewAD": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Have a AD in your VPC already",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC.  Note: The logical order is preserved and that 2 AZ's must be  provided unless the Third AZ parameter is specified, in which  case 3 AZ's must me provided.",
            "Type": "String"
        },
        "DomainAdminPasswordKey": {
            "Description": "SSM Parameter Key of Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "Type": "String"
        },
        "DomainAdminUser": {
            "AllowedPattern": "([a-zA-Z0-9]+(\\.|_|-|@)*)+",
            "Default": "StackAdmin",
            "Description": "User name for the account that will be used as Domain Administrator. This is separate from the default \"Administrator\" account",
            "MaxLength": "20",
            "MinLength": "5",
            "Type": "String"
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+\\..+",
            "Default": "example.com",
            "Description": "Fully qualified domain name (FQDN) e.g. example.com",
            "MaxLength": "255",
            "MinLength": "2",
            "Type": "String"
        },
        "DomainMemberSGID": {
            "Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "ADServersPrivateIP": {
            "Default": "",
            "Description": "Fixed private IPs for Active Directory servers",
            "Type": "String"
        },
        "WSFClusterName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "WSFCluster1",
            "Description": "Name your WSFCluster",
            "MaxLength": "15",
            "MinLength": "4",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NodeAccessTypes": {
            "Default": "SyncMode,SyncMode,SyncMode,ReadOnlyMode,ReadOnlyMode,ReadOnlyMode,ReadOnlyMode,ReadOnlyMode",
            "Description": "SQLHA can have up to 3 SyncMode nodes and 5 ReadOnlyMode nodes",
            "Type": "String"
        },
        "NumberOfSubnets": {
            "AllowedValues": [
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8"
            ],
            "Default": "2",
            "Description": "Number Of Private Subnets.",
            "Type": "String"
        },
        "PrivateSubnetAssignment": {
            "Default": "",
            "Description": "Private subnets assignment for each sql nodes",
            "Type": "CommaDelimitedList"
        },
        "AssetsBucketName": {
            "Default": "launchwizard-sqlha-templates",
            "Description": "S3 bucket name for the LaunchWizard SQLHA assets. LaunchWizard SQLHA bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "AssetsS3KeyPrefix": {
            "Default": "",
            "Description": "S3 key prefix for the LaunchWizard SQLHA assets. LaunchWizard SQLHA key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "AssetsS3RegionCode": {
            "Default": "s3.us-east-1",
            "Description": "S3 region code.",
            "Type": "String"
        },
        "SQLAMIID": {
            "Default": "ami-066110f78aa038545",
            "Description": "AMI ID",
            "Type": "String"
        },
        "SQLLicenseProvided": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "License SQL Server from AWS Marketplace",
            "Type": "String"
        },
        "SQLServerVersion": {
            "AllowedValues": [
                "2017-standard",
                "2017",
                "2016",
                "2014"
            ],
            "Default": "2017",
            "Description": "Version of SQL Server to install on Failover Cluster Nodes",
            "Type": "String"
        },
        "SQLServiceAccount": {
            "AllowedPattern": "([a-zA-Z0-9]+(\\.|_|-|@)*)+",
            "Default": "sqlsa",
            "Description": "User name for the SQL Server Service Account. This Account is a Domain User.",
            "MaxLength": "20",
            "MinLength": "5",
            "Type": "String"
        },
        "SQLServiceAccountPasswordKey": {
            "Description": "SSM Parameter Store Key of Password for the SQL Service account. Must be at least 8 characters containing letters, numbers and symbols",
            "Type": "String"
        },
        "Volume1Size": {
            "Default": "500",
            "Description": "Volume size for the SQL Data drive, in GiB",
            "Type": "String"
        },
        "Volume1Type": {
            "AllowedValues": [
                "gp2",
                "io1",
                "st1",
                "sc1",
                "gp3",
                "io2"
            ],
            "Default": "gp2",
            "Description": "Volume type for the SQL Data drive",
            "Type": "String"
        },
        "Volume1DeviceName": {
            "Default": "/dev/xvdc",
            "Description": "Device Name of Volume1",
            "Type": "String"
        },
        "Volume1DriveLetter": {
            "Default": "D",
            "Description": "Drive Letter of Volume1",
            "Type": "String"
        },
        "Volume1DriveType": {
            "Default": "logs",
            "Description": "Drive Type of Volume1",
            "Type": "String"
        },
        "Volume2Size": {
            "Default": "500",
            "Description": "Volume size for the SQL Logs drive, in GiB",
            "Type": "String"
        },
        "Volume2Type": {
            "AllowedValues": [
                "gp2",
                "io1",
                "st1",
                "sc1",
                "gp3",
                "io2"
            ],
            "Default": "gp2",
            "Description": "Volume type for the SQL Logs drive",
            "Type": "String"
        },
        "Volume2DeviceName": {
            "Default": "/dev/xvdd",
            "Description": "Device Name of Volume2",
            "Type": "String"
        },
        "Volume2DriveLetter": {
            "Default": "E",
            "Description": "Drive Letter of Volume2",
            "Type": "String"
        },
        "Volume2DriveType": {
            "Default": "data",
            "Description": "Drive Type of Volume2",
            "Type": "String"
        },
        "Volume3Size": {
            "Default": "500",
            "Description": "Volume size for the SQL TempDB drive, in GiB",
            "Type": "String"
        },
        "Volume3Type": {
            "AllowedValues": [
                "gp2",
                "io1",
                "st1",
                "sc1",
                "gp3",
                "io2"
            ],
            "Default": "gp2",
            "Description": "Volume type for the SQL TempDB drive",
            "Type": "String"
        },
        "Volume3DeviceName": {
            "Default": "/dev/xvde",
            "Description": "Device Name of Volume3",
            "Type": "String"
        },
        "Volume3DriveLetter": {
            "Default": "F",
            "Description": "Drive Letter of Volume3",
            "Type": "String"
        },
        "Volume3DriveType": {
            "Default": "backup",
            "Description": "Drive Type of Volume3",
            "Type": "String"
        },
        "VolumeIopsValues": {
            "Default": "5000,5000,5000,5000",
            "Description": "Default provisioned IOPs for the Root Drive, SQL Data, Logs and TempDb (for io1 volumes)",
            "Type": "String"
        },
        "RootDriveType": {
            "Default": "gp2",
            "Description": "Volume Type of Root Drive",
            "Type": "String"
        },
        "RootDriveSize": {
            "Default": "100",
            "Description": "Volume Size of Root Drive",
            "Type": "String"
        },
        "TempDBonInstanceStore": {
            "Default": "false",
            "Description": "Place TempDB on local instance store",
            "Type": "String"
        },
        "SQLNodeTagPairs": {
            "Type": "CommaDelimitedList",
            "Description": "Tag Key and Value pairs of SQLNode",
            "Default": ""
        },
        "NumberOfSQLNodeTags": {
            "Default": "0",
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3"
            ],
            "Description": "Number of SQLNode tags",
            "Type": "String"
        },
        "VolumeTagPairs": {
            "Type": "CommaDelimitedList",
            "Description": "String includes all valume tags key and value pairs",
            "Default": ""
        },
        "NumberOfVolumeTags": {
            "Default": "0",
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3"
            ],
            "Description": "Number of Volume tags",
            "Type": "String"
        },
        "GeneralTagPairString": {
            "Default": "",
            "Description": "String includes all general tags key and value pairs",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "NumberOfNodes": {
            "AllowedValues": [
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8"
            ],
            "Default": "2",
            "Description": "Enter the number of SQLServer nodes to create",
            "Type": "String"
        },
        "WSFCNodeInstanceType": {
            "Default": "r5.2xlarge",
            "Description": "Amazon EC2 instance type for the WSFC Nodes",
            "Type": "String"
        },
        "NodeNetBIOSNames": {
            "Type": "CommaDelimitedList",
            "Description": "NetBIOS name of Nodes (each one up to 15 characters)",
            "Default": "WSFCNode1,WSFCNode2,WSFCNode3,WSFCNode4,WSFCNode5,WSFCNode6,WSFCNode7,WSFCNode8"
        },
        "VersionsRange": {
            "Type": "CommaDelimitedList",
            "Description": "Range of OS version range followed by sql versions",
            "Default": "6.3,10.0,12,16"
        },
        "FSWNodeAmiId": {
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base"
        },
        "FSWParameters": {
            "Type": "CommaDelimitedList",
            "Description": "FSW node name, private subnet, instance type",
            "Default": ""
        },
        "DHIDS": {
            "Default": "",
            "Description": "Dedicated Host Ids to deploy instances",
            "Type": "String"
        },
        "HRGID": {
            "Default": "",
            "Description": "Host Resource Group Id in which to deploy instances",
            "Type": "String"
        },
        "AGName": {
            "Default": "AG1",
            "Description": "Availability Group Name",
            "Type": "String"
        },
        "DatabaseName": {
            "Default": "DBtest",
            "Description": "Database Name",
            "Type": "String"
        },
        "SubnetMasks": {
            "Default": "255.255.240.0,255.255.240.0,255.255.240.0",
            "Type": "String"
        },
        "AGListenerName": {
            "Default": "agListener",
            "Description": "Availability Group Listener Name",
            "Type": "String"
        }
    },
    "Conditions": {
        "CreateFSW": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "FSWParameters"
                                }
                            ]
                        },
                        ""
                    ]
                }
            ]
        },
        "isGovRegion": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "us-gov-west-1",
                        {
                            "Ref": "AWS::Region"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "us-gov-east-1",
                        {
                            "Ref": "AWS::Region"
                        }
                    ]
                }
            ]
        },
        "1SQLNodeTags": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfSQLNodeTags"
                        },
                        "1"
                    ]
                },
                {
                    "Condition": "2SQLNodeTags"
                }
            ]
        },
        "2SQLNodeTags": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfSQLNodeTags"
                        },
                        "2"
                    ]
                },
                {
                    "Condition": "3SQLNodeTags"
                }
            ]
        },
        "3SQLNodeTags": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfSQLNodeTags"
                },
                "3"
            ]
        },
        "1VolumeTags": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfVolumeTags"
                        },
                        "1"
                    ]
                },
                {
                    "Condition": "2VolumeTags"
                }
            ]
        },
        "2VolumeTags": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfVolumeTags"
                        },
                        "2"
                    ]
                },
                {
                    "Condition": "3VolumeTags"
                }
            ]
        },
        "3VolumeTags": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfVolumeTags"
                },
                "3"
            ]
        },
        "LogFeatureEnabled": {
            "Fn::Equals": [
                {
                    "Ref": "EnableLogFeature"
                },
                "true"
            ]
        },
        "NewAD": {
            "Fn::Equals": [
                {
                    "Ref": "CreateNewAD"
                },
                "true"
            ]
        },
        "IsThreeNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfNodes"
                        },
                        "3"
                    ]
                },
                {
                    "Condition": "IsFourNodes"
                }
            ]
        },
        "IsFourNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfNodes"
                        },
                        "4"
                    ]
                },
                {
                    "Condition": "IsFiveNodes"
                }
            ]
        },
        "IsFiveNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfNodes"
                        },
                        "5"
                    ]
                },
                {
                    "Condition": "IsSixNodes"
                }
            ]
        },
        "IsSixNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfNodes"
                        },
                        "6"
                    ]
                },
                {
                    "Condition": "IsSevenNodes"
                }
            ]
        },
        "IsSevenNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfNodes"
                        },
                        "7"
                    ]
                },
                {
                    "Condition": "IsEightNodes"
                }
            ]
        },
        "IsEightNodes": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfNodes"
                },
                "8"
            ]
        },
        "CreateVolume1": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Volume1DeviceName"
                        },
                        "N/A"
                    ]
                }
            ]
        },
        "CreateVolume2": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Volume2DeviceName"
                        },
                        "N/A"
                    ]
                }
            ]
        },
        "CreateVolume3": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Volume3DeviceName"
                        },
                        "N/A"
                    ]
                }
            ]
        },
        "CreateNode3Volume1": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume1"
                },
                {
                    "Condition": "IsThreeNodes"
                }
            ]
        },
        "CreateNode3Volume2": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume2"
                },
                {
                    "Condition": "IsThreeNodes"
                }
            ]
        },
        "CreateNode3Volume3": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume3"
                },
                {
                    "Condition": "IsThreeNodes"
                }
            ]
        },
        "CreateNode4Volume1": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume1"
                },
                {
                    "Condition": "IsFourNodes"
                }
            ]
        },
        "CreateNode4Volume2": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume2"
                },
                {
                    "Condition": "IsFourNodes"
                }
            ]
        },
        "CreateNode4Volume3": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume3"
                },
                {
                    "Condition": "IsFourNodes"
                }
            ]
        },
        "CreateNode5Volume1": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume1"
                },
                {
                    "Condition": "IsFiveNodes"
                }
            ]
        },
        "CreateNode5Volume2": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume2"
                },
                {
                    "Condition": "IsFiveNodes"
                }
            ]
        },
        "CreateNode5Volume3": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume3"
                },
                {
                    "Condition": "IsFiveNodes"
                }
            ]
        },
        "CreateNode6Volume1": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume1"
                },
                {
                    "Condition": "IsSixNodes"
                }
            ]
        },
        "CreateNode6Volume2": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume2"
                },
                {
                    "Condition": "IsSixNodes"
                }
            ]
        },
        "CreateNode6Volume3": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume3"
                },
                {
                    "Condition": "IsSixNodes"
                }
            ]
        },
        "CreateNode7Volume1": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume1"
                },
                {
                    "Condition": "IsSevenNodes"
                }
            ]
        },
        "CreateNode7Volume2": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume2"
                },
                {
                    "Condition": "IsSevenNodes"
                }
            ]
        },
        "CreateNode7Volume3": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume3"
                },
                {
                    "Condition": "IsSevenNodes"
                }
            ]
        },
        "CreateNode8Volume1": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume1"
                },
                {
                    "Condition": "IsEightNodes"
                }
            ]
        },
        "CreateNode8Volume2": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume2"
                },
                {
                    "Condition": "IsEightNodes"
                }
            ]
        },
        "CreateNode8Volume3": {
            "Fn::And": [
                {
                    "Condition": "CreateVolume3"
                },
                {
                    "Condition": "IsEightNodes"
                }
            ]
        },
        "RootDriveIsIo2": {
            "Fn::Equals": [
                {
                    "Ref": "RootDriveType"
                },
                "io2"
            ]
        },
        "RootDriveIsIo1": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "RootDriveType"
                        },
                        "io1"
                    ]
                },
                {
                    "Condition": "RootDriveIsIo2"
                }
            ]
        },
        "Vol1IsIo2": {
            "Fn::Equals": [
                {
                    "Ref": "Volume1Type"
                },
                "io2"
            ]
        },
        "Vol1IsIo1": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Volume1Type"
                        },
                        "io1"
                    ]
                },
                {
                    "Condition": "Vol1IsIo2"
                }
            ]
        },
        "Vol2IsIo2": {
            "Fn::Equals": [
                {
                    "Ref": "Volume2Type"
                },
                "io2"
            ]
        },
        "Vol2IsIo1": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Volume2Type"
                        },
                        "io1"
                    ]
                },
                {
                    "Condition": "Vol2IsIo2"
                }
            ]
        },
        "Vol3IsIo2": {
            "Fn::Equals": [
                {
                    "Ref": "Volume3Type"
                },
                "io2"
            ]
        },
        "Vol3IsIo1": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "Volume3Type"
                        },
                        "io1"
                    ]
                },
                {
                    "Condition": "Vol3IsIo2"
                }
            ]
        },
        "NewRole": {
            "Fn::Equals": [
                {
                    "Ref": "Ec2RoleName"
                },
                ""
            ]
        },
        "isDH": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DHIDS"
                        },
                        ""
                    ]
                }
            ]
        },
        "isHRG": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "HRGID"
                        },
                        ""
                    ]
                }
            ]
        },
        "TempDB": {
            "Fn::Equals": [
                {
                    "Ref": "TempDBonInstanceStore"
                },
                "true"
            ]
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must in the VPC"
                }
            ]
        }
    },
    "Resources": {
        "WorkflowDB": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "",
                        [
                            "LaunchWizard-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "NodeName",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "IPAddress",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "NodeName",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "IPAddress",
                        "KeyType": "RANGE"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST"
            }
        },
        "WSFCRole": {
            "Condition": "NewRole",
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonEC2RoleforSSM"
                            ]
                        ]
                    }
                ],
                "Policies": [
                    {
                        "PolicyName": "LaunchWizardPolicyForEC2",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:Create*",
                                        "logs:PutLogEvents",
                                        "s3:GetObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:",
                                                    {
                                                        "Ref": "AWS::Partition"
                                                    },
                                                    ":logs:*:*:*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:",
                                                    {
                                                        "Ref": "AWS::Partition"
                                                    },
                                                    ":s3:::launchwizard*/*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "ec2:AttachVolume",
                                        "ec2:ModifyVolume",
                                        "ec2:DescribeVolumes",
                                        "ec2:DescribeInstances",
                                        "ec2:CreateVolume"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "ForAllValues:StringLike": {
                                            "aws:TagKeys": "LaunchWizardResourceGroupID"
                                        }
                                    },
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "ec2:AssociateAddress",
                                        "ec2:DescribeAddresses",
                                        "ec2:CreateTags"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "WSFCProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": {
                    "Fn::If": [
                        "NewRole",
                        [
                            {
                                "Ref": "WSFCRole"
                            }
                        ],
                        [
                            {
                                "Ref": "Ec2RoleName"
                            }
                        ]
                    ]
                },
                "Path": "/"
            }
        },
        "FSWNodeWaitCondition": {
            "Condition": "CreateFSW",
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "FSWNode",
            "Properties": {
                "Handle": {
                    "Ref": "FSWWaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "FSWWaitHandle": {
            "Condition": "CreateFSW",
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode1WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WSFCNode1",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode1WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode1WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode2WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WSFCNode2",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode2WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode2WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode3WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IsThreeNodes",
            "DependsOn": "WSFCNode3",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode3WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode3WaitHandle": {
            "Condition": "IsThreeNodes",
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode4WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IsFourNodes",
            "DependsOn": "WSFCNode4",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode4WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode4WaitHandle": {
            "Condition": "IsFourNodes",
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode5WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IsFiveNodes",
            "DependsOn": "WSFCNode5",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode5WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode5WaitHandle": {
            "Condition": "IsFiveNodes",
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode6WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IsSixNodes",
            "DependsOn": "WSFCNode6",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode6WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode6WaitHandle": {
            "Condition": "IsSixNodes",
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode7WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IsSevenNodes",
            "DependsOn": "WSFCNode7",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode7WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode7WaitHandle": {
            "Condition": "IsSevenNodes",
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode8WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IsEightNodes",
            "DependsOn": "WSFCNode8",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode8WaitHandle"
                },
                "Timeout": "14400"
            }
        },
        "WSFCNode8WaitHandle": {
            "Condition": "IsEightNodes",
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "NetworkInterfaceFSW": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "CreateFSW",
            "Properties": {
                "SubnetId": {
                    "Fn::Select": [
                        "1",
                        {
                            "Ref": "FSWParameters"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "FSWParameters"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface1": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "0",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface2": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "1",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "1",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface3": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "IsThreeNodes",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "2",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "2",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface4": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "IsFourNodes",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "3",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "3",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface5": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "IsFiveNodes",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "4",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "4",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface6": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "IsSixNodes",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "5",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "5",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface7": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "IsSevenNodes",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "6",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "6",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NetworkInterface8": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "IsEightNodes",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Fn::Select": [
                        "7",
                        {
                            "Ref": "PrivateSubnetAssignment"
                        }
                    ]
                },
                "GroupSet": [
                    {
                        "Ref": "DomainMemberSGID"
                    },
                    {
                        "Ref": "WSFCSecurityGroup"
                    },
                    {
                        "Ref": "WSFCClientSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "7",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "DisableIMDSv1": {
            "Type": "AWS::EC2::LaunchTemplate",
            "Properties": {
              "LaunchTemplateData": {
                "MetadataOptions": {
                  "HttpEndpoint": "enabled",
                  "HttpTokens": "required"
                }
              }
            }
        },
        "FSWNode": {
            "Condition": "CreateFSW",
            "DependsOn": "WSFCNode2",
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "QuickStartSetup",
                            "Prep",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-enableSSM": {
                                "command": "powershell.exe -Command \"Set-Service -Name AmazonSSMAgent -StartupType Automatic\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restartSSM": {
                                "command": "powershell.exe -Command \"Restart-Service AmazonSSMAgent -Force\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "QuickStartSetup": {
                        "commands": {
                            "a-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-init-launchwizard-handle": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "FSWWaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-add-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "FSWParameters"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "e-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "g-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "h-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-create-witness-share": {
                                "Fn::If": [
                                    "CreateFSW",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Create-FileShare.ps1",
                                                    " -Path 'c:\\witness'",
                                                    " -ShareName 'witness'",
                                                    " -FolderPath 'c:\\'",
                                                    " -FolderName 'witness'",
                                                    " -DomainName '",
                                                    {
                                                        "Ref": "DomainDNSName"
                                                    },
                                                    "' -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -ServerName '",
                                                    {
                                                        "Fn::Select": [
                                                            "0",
                                                            {
                                                                "Ref": "FSWParameters"
                                                            }
                                                        ]
                                                    },
                                                    "'\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "c-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "FSWNodeAmiId"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]           
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Fn::Select": [
                        "2",
                        {
                            "Ref": "FSWParameters"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterfaceFSW"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "FSWParameters"
                                }
                            ]
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r FSWNode",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode1": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "LaunchWizardCFNSetup",
                            "Validate",
                            "PreConfigDSC",
                            "VolumesSetup",
                            "Prep",
                            "SQLIncludedConfigure",
                            "Configure",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode1WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "LaunchWizardCFNSetup": {
                        "commands": {
                            "a-install-wmf-framework": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Install-WMFFramework.ps1",
                                "waitAfterCompletion": "forever"
                            },
                            "b-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-init-launchwizard-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "WSFCNode1WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Validate": {
                        "commands": {
                            "a-validate-os-and-sql-server-version": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Validate-OSAndSQLVersions.ps1 -MinimumOSVersion '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "VersionsRange"
                                                    }
                                                ]
                                            },
                                            "' -MinimumSQLVersion '",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "VersionsRange"
                                                    }
                                                ]
                                            },
                                            "' -MaximumOSVersion '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "VersionsRange"
                                                    }
                                                ]
                                            },
                                            "' -MaximumSQLVersion '",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "VersionsRange"
                                                    }
                                                ]
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "PreConfigDSC": {
                        "commands": {
                            "a-run-pre-config-dsc": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\DSC\\PreConfigDSC.ps1 -VPCCIDR '",
                                            {
                                                "Ref": "VPCCIDR"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "VolumesSetup": {
                        "commands": {
                            "a-initialize-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\InitializeDisks.ps1",
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-resize-volumes": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Resize-Volumes.ps1",
                                            " -VolumeSizes ",
                                            {
                                                "Fn::Sub": "${Volume1Size},${Volume2Size},${Volume3Size}"
                                            },
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-extend-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Extend-Disks.ps1",
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-tag-root-volume": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Tag-RootVolume.ps1 -UniqueID '",
                                            {
                                                "Ref": "UniqueID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-create-sql-account": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Create-ADServiceAccount.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminSecretKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -ServiceAccountUser '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -ServiceAccountSecretKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "l-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "SQLIncludedConfigure": {
                        "commands": {
                            "a-add-buildtin-admins-to-sysadmin": {
                                "command": "powershell.exe -Command \"C:\\cfn\\DSC\\PostConfigDSC.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "c-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "d-configure-sql": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-SQL.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -SQLServiceAccountPasswordKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DriveTypes ",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            " -TempDBonInstanceStore ",
                                            {
                                                "Ref": "TempDBonInstanceStore"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-configure-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-TempDB.ps1 -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -NetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "0",
                                                            {
                                                                "Ref": "NodeNetBIOSNames"
                                                            }
                                                        ]
                                                    },
                                                    "' -DriveLetters ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                                    },
                                                    " -DriveTypes ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                                    },
                                                    "\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "a-set-maxdop": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\SetMaxDOP.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-set-sqlinstancename": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Set-SQLInstanceName.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-remove-MSSQLSvcSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-remove-MSSQLSvcPortSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-add-windows-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode1",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface1",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "d-query-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Query-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -numberOfNodes ",
                                            {
                                                "Ref": "NumberOfNodes"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "e-set-cluster-permission": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-ClusterPermissions.ps1",
                                            " -WSFClusterName ",
                                            {
                                                "Ref": "WSFClusterName"
                                            },
                                            " -DomainAdminUser ",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            " -DomainAdminPasswordKey ",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "f-setup-sqlha": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Setup-SQLHA.ps1 -numberOfNodes '",
                                            {
                                                "Ref": "NumberOfNodes"
                                            },
                                            "' -agName '",
                                            {
                                                "Ref": "AGName"
                                            },
                                            "' -agListenerName '",
                                            {
                                                "Ref": "AGListenerName"
                                            },
                                            "' -domaindnsname '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -ipAgListeners '",
                                            {
                                                "Fn::Join": [
                                                    ",",
                                                    [
                                                        {
                                                            "Fn::Select": [
                                                                "1",
                                                                {
                                                                    "Fn::GetAtt": [
                                                                        "NetworkInterface1",
                                                                        "SecondaryPrivateIpAddresses"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::Select": [
                                                                "1",
                                                                {
                                                                    "Fn::GetAtt": [
                                                                        "NetworkInterface2",
                                                                        "SecondaryPrivateIpAddresses"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsThreeNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "1",
                                                                        {
                                                                            "Fn::GetAtt": [
                                                                                "NetworkInterface3",
                                                                                "SecondaryPrivateIpAddresses"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsFourNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "1",
                                                                        {
                                                                            "Fn::GetAtt": [
                                                                                "NetworkInterface4",
                                                                                "SecondaryPrivateIpAddresses"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsFiveNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "1",
                                                                        {
                                                                            "Fn::GetAtt": [
                                                                                "NetworkInterface5",
                                                                                "SecondaryPrivateIpAddresses"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsSixNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "1",
                                                                        {
                                                                            "Fn::GetAtt": [
                                                                                "NetworkInterface6",
                                                                                "SecondaryPrivateIpAddresses"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsSevenNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "1",
                                                                        {
                                                                            "Fn::GetAtt": [
                                                                                "NetworkInterface7",
                                                                                "SecondaryPrivateIpAddresses"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsEightNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "1",
                                                                        {
                                                                            "Fn::GetAtt": [
                                                                                "NetworkInterface8",
                                                                                "SecondaryPrivateIpAddresses"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            },
                                            "' -NodeNetBIOSName '",
                                            {
                                                "Fn::Join": [
                                                    ",",
                                                    [
                                                        {
                                                            "Fn::Select": [
                                                                "0",
                                                                {
                                                                    "Ref": "NodeNetBIOSNames"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::Select": [
                                                                "1",
                                                                {
                                                                    "Ref": "NodeNetBIOSNames"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsThreeNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "2",
                                                                        {
                                                                            "Ref": "NodeNetBIOSNames"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsFourNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "3",
                                                                        {
                                                                            "Ref": "NodeNetBIOSNames"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsFiveNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "4",
                                                                        {
                                                                            "Ref": "NodeNetBIOSNames"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsSixNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "5",
                                                                        {
                                                                            "Ref": "NodeNetBIOSNames"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsSevenNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "6",
                                                                        {
                                                                            "Ref": "NodeNetBIOSNames"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsEightNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "7",
                                                                        {
                                                                            "Ref": "NodeNetBIOSNames"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DatabaseName '",
                                            {
                                                "Ref": "DatabaseName"
                                            },
                                            "' -DriveLetters '",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "' -DriveTypes '",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            "' -nodeAccessTypes '",
                                            {
                                                "Ref": "NodeAccessTypes"
                                            },
                                            "' -PrivateSubnetAssignment '",
                                            {
                                                "Fn::Join": [
                                                    ",",
                                                    [
                                                        {
                                                            "Fn::Select": [
                                                                "0",
                                                                {
                                                                    "Ref": "PrivateSubnetAssignment"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::Select": [
                                                                "1",
                                                                {
                                                                    "Ref": "PrivateSubnetAssignment"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsThreeNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "2",
                                                                        {
                                                                            "Ref": "PrivateSubnetAssignment"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsFourNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "3",
                                                                        {
                                                                            "Ref": "PrivateSubnetAssignment"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsFiveNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "4",
                                                                        {
                                                                            "Ref": "PrivateSubnetAssignment"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsSixNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "5",
                                                                        {
                                                                            "Ref": "PrivateSubnetAssignment"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsSevenNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "6",
                                                                        {
                                                                            "Ref": "PrivateSubnetAssignment"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "Fn::If": [
                                                                "IsEightNodes",
                                                                {
                                                                    "Fn::Select": [
                                                                        "7",
                                                                        {
                                                                            "Ref": "PrivateSubnetAssignment"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "Ref": "AWS::NoValue"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            },
                                            "' -subnetMasks '",
                                            {
                                                "Ref": "SubnetMasks"
                                            },
                                            "' -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "g-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "i-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "j-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                0,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]           
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateVolume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode1Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateVolume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode1Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateVolume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode1Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface1"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode1WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode1",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode3": {
            "Type": "AWS::EC2::Instance",
            "Condition": "IsThreeNodes",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "LaunchWizardCFNSetup",
                            "PreConfigDSC",
                            "VolumesSetup",
                            "Prep",
                            "SQLIncludedConfigure",
                            "Configure",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode3WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "m-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "n-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "LaunchWizardCFNSetup": {
                        "commands": {
                            "a-install-wmf-framework": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Install-WMFFramework.ps1",
                                "waitAfterCompletion": "forever"
                            },
                            "b-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "f-init-launchwizard-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "WSFCNode3WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "PreConfigDSC": {
                        "commands": {
                            "a-run-pre-config-dsc": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\DSC\\PreConfigDSC.ps1 -VPCCIDR '",
                                            {
                                                "Ref": "VPCCIDR"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "VolumesSetup": {
                        "commands": {
                            "a-initialize-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\InitializeDisks.ps1",
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-resize-volumes": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Resize-Volumes.ps1",
                                            " -VolumeSizes ",
                                            {
                                                "Fn::Sub": "${Volume1Size},${Volume2Size},${Volume3Size}"
                                            },
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-extend-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Extend-Disks.ps1",
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-tag-root-volume": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Tag-RootVolume.ps1 -UniqueID '",
                                            {
                                                "Ref": "UniqueID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "SQLIncludedConfigure": {
                        "commands": {
                            "a-add-buildtin-admins-to-sysadmin": {
                                "command": "powershell.exe -Command \"C:\\cfn\\DSC\\PostConfigDSC.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "c-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "d-configure-sql": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-SQL.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -SQLServiceAccountPasswordKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DriveTypes ",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            " -TempDBonInstanceStore ",
                                            {
                                                "Ref": "TempDBonInstanceStore"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-configure-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-TempDB.ps1 -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -NetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "2",
                                                            {
                                                                "Ref": "NodeNetBIOSNames"
                                                            }
                                                        ]
                                                    },
                                                    "' -DriveLetters ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                                    },
                                                    " -DriveTypes ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                                    },
                                                    "\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "a-set-maxdop": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\SetMaxDOP.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-set-sqlinstancename": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Set-SQLInstanceName.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-remove-MSSQLSvcSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-remove-MSSQLSvcPortSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "2",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-add-windows-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode3",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface3",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "e-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]            
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateNode3Volume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode3Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode3Volume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode3Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode3Volume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode3Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface3"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "2",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode1WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode3",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode4": {
            "Type": "AWS::EC2::Instance",
            "Condition": "IsFourNodes",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "LaunchWizardCFNSetup",
                            "PreConfigDSC",
                            "VolumesSetup",
                            "Prep",
                            "SQLIncludedConfigure",
                            "Configure",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode1WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "m-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "n-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "LaunchWizardCFNSetup": {
                        "commands": {
                            "a-install-wmf-framework": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Install-WMFFramework.ps1",
                                "waitAfterCompletion": "forever"
                            },
                            "b-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "f-init-launchwizard-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "WSFCNode4WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "PreConfigDSC": {
                        "commands": {
                            "a-run-pre-config-dsc": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\DSC\\PreConfigDSC.ps1 -VPCCIDR '",
                                            {
                                                "Ref": "VPCCIDR"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "VolumesSetup": {
                        "commands": {
                            "a-initialize-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\InitializeDisks.ps1",
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-resize-volumes": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Resize-Volumes.ps1",
                                            " -VolumeSizes ",
                                            {
                                                "Fn::Sub": "${Volume1Size},${Volume2Size},${Volume3Size}"
                                            },
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-extend-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Extend-Disks.ps1",
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-tag-root-volume": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Tag-RootVolume.ps1 -UniqueID '",
                                            {
                                                "Ref": "UniqueID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "SQLIncludedConfigure": {
                        "commands": {
                            "a-add-buildtin-admins-to-sysadmin": {
                                "command": "powershell.exe -Command \"C:\\cfn\\DSC\\PostConfigDSC.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "c-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "d-configure-sql": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-SQL.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -SQLServiceAccountPasswordKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DriveTypes ",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            " -TempDBonInstanceStore ",
                                            {
                                                "Ref": "TempDBonInstanceStore"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-configure-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-TempDB.ps1 -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -NetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "3",
                                                            {
                                                                "Ref": "NodeNetBIOSNames"
                                                            }
                                                        ]
                                                    },
                                                    "' -DriveLetters ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                                    },
                                                    " -DriveTypes ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                                    },
                                                    "\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "a-set-maxdop": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\SetMaxDOP.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-set-sqlinstancename": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Set-SQLInstanceName.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-remove-MSSQLSvcSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-remove-MSSQLSvcPortSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "3",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-add-windows-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode4",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface4",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "e-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]            
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateNode4Volume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode4Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode4Volume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode4Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode4Volume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode4Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface4"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "3",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode4WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode4",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode5": {
            "Type": "AWS::EC2::Instance",
            "Condition": "IsFiveNodes",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "LaunchWizardCFNSetup",
                            "PreConfigDSC",
                            "VolumesSetup",
                            "Prep",
                            "SQLIncludedConfigure",
                            "Configure",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode5WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "m-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "n-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "LaunchWizardCFNSetup": {
                        "commands": {
                            "a-install-wmf-framework": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Install-WMFFramework.ps1",
                                "waitAfterCompletion": "forever"
                            },
                            "b-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "f-init-launchwizard-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "WSFCNode5WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "PreConfigDSC": {
                        "commands": {
                            "a-run-pre-config-dsc": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\DSC\\PreConfigDSC.ps1 -VPCCIDR '",
                                            {
                                                "Ref": "VPCCIDR"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "VolumesSetup": {
                        "commands": {
                            "a-initialize-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\InitializeDisks.ps1",
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-resize-volumes": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Resize-Volumes.ps1",
                                            " -VolumeSizes ",
                                            {
                                                "Fn::Sub": "${Volume1Size},${Volume2Size},${Volume3Size}"
                                            },
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-extend-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Extend-Disks.ps1",
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-tag-root-volume": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Tag-RootVolume.ps1 -UniqueID '",
                                            {
                                                "Ref": "UniqueID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "SQLIncludedConfigure": {
                        "commands": {
                            "a-add-buildtin-admins-to-sysadmin": {
                                "command": "powershell.exe -Command \"C:\\cfn\\DSC\\PostConfigDSC.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "c-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "d-configure-sql": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-SQL.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -SQLServiceAccountPasswordKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DriveTypes ",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            " -TempDBonInstanceStore ",
                                            {
                                                "Ref": "TempDBonInstanceStore"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-configure-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-TempDB.ps1 -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -NetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "4",
                                                            {
                                                                "Ref": "NodeNetBIOSNames"
                                                            }
                                                        ]
                                                    },
                                                    "' -DriveLetters ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                                    },
                                                    " -DriveTypes ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                                    },
                                                    "\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "a-set-maxdop": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\SetMaxDOP.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-set-sqlinstancename": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Set-SQLInstanceName.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-remove-MSSQLSvcSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-remove-MSSQLSvcPortSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "4",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-add-windows-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode5",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface5",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "e-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                4,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]            
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateNode5Volume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode5Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode5Volume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode5Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode5Volume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode5Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface5"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "4",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode5WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode5",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode6": {
            "Type": "AWS::EC2::Instance",
            "Condition": "IsSixNodes",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "LaunchWizardCFNSetup",
                            "PreConfigDSC",
                            "VolumesSetup",
                            "Prep",
                            "SQLIncludedConfigure",
                            "Configure",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode6WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "m-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "n-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "LaunchWizardCFNSetup": {
                        "commands": {
                            "a-install-wmf-framework": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Install-WMFFramework.ps1",
                                "waitAfterCompletion": "forever"
                            },
                            "b-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "f-init-launchwizard-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "WSFCNode6WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "PreConfigDSC": {
                        "commands": {
                            "a-run-pre-config-dsc": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\DSC\\PreConfigDSC.ps1 -VPCCIDR '",
                                            {
                                                "Ref": "VPCCIDR"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "VolumesSetup": {
                        "commands": {
                            "a-initialize-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\InitializeDisks.ps1",
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-resize-volumes": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Resize-Volumes.ps1",
                                            " -VolumeSizes ",
                                            {
                                                "Fn::Sub": "${Volume1Size},${Volume2Size},${Volume3Size}"
                                            },
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-extend-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Extend-Disks.ps1",
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-tag-root-volume": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Tag-RootVolume.ps1 -UniqueID '",
                                            {
                                                "Ref": "UniqueID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "SQLIncludedConfigure": {
                        "commands": {
                            "a-add-buildtin-admins-to-sysadmin": {
                                "command": "powershell.exe -Command \"C:\\cfn\\DSC\\PostConfigDSC.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "c-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "d-configure-sql": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-SQL.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -SQLServiceAccountPasswordKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DriveTypes ",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            " -TempDBonInstanceStore ",
                                            {
                                                "Ref": "TempDBonInstanceStore"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-configure-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-TempDB.ps1 -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -NetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "5",
                                                            {
                                                                "Ref": "NodeNetBIOSNames"
                                                            }
                                                        ]
                                                    },
                                                    "' -DriveLetters ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                                    },
                                                    " -DriveTypes ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                                    },
                                                    "\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "a-set-maxdop": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\SetMaxDOP.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-set-sqlinstancename": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Set-SQLInstanceName.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-remove-MSSQLSvcSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-remove-MSSQLSvcPortSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "5",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-add-windows-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode6",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface6",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "e-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                5,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]            
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateNode6Volume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode6Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode6Volume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode6Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode6Volume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode6Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface6"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "5",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode6WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode6",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode7": {
            "Type": "AWS::EC2::Instance",
            "Condition": "IsSevenNodes",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "LaunchWizardCFNSetup",
                            "PreConfigDSC",
                            "VolumesSetup",
                            "Prep",
                            "SQLIncludedConfigure",
                            "Configure",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode7WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "m-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "n-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "LaunchWizardCFNSetup": {
                        "commands": {
                            "a-install-wmf-framework": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Install-WMFFramework.ps1",
                                "waitAfterCompletion": "forever"
                            },
                            "b-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "f-init-launchwizard-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "WSFCNode7WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "PreConfigDSC": {
                        "commands": {
                            "a-run-pre-config-dsc": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\DSC\\PreConfigDSC.ps1 -VPCCIDR '",
                                            {
                                                "Ref": "VPCCIDR"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "VolumesSetup": {
                        "commands": {
                            "a-initialize-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\InitializeDisks.ps1",
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-resize-volumes": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Resize-Volumes.ps1",
                                            " -VolumeSizes ",
                                            {
                                                "Fn::Sub": "${Volume1Size},${Volume2Size},${Volume3Size}"
                                            },
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-extend-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Extend-Disks.ps1",
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-tag-root-volume": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Tag-RootVolume.ps1 -UniqueID '",
                                            {
                                                "Ref": "UniqueID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "SQLIncludedConfigure": {
                        "commands": {
                            "a-add-buildtin-admins-to-sysadmin": {
                                "command": "powershell.exe -Command \"C:\\cfn\\DSC\\PostConfigDSC.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "c-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "d-configure-sql": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-SQL.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -SQLServiceAccountPasswordKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DriveTypes ",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            " -TempDBonInstanceStore ",
                                            {
                                                "Ref": "TempDBonInstanceStore"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-configure-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-TempDB.ps1 -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -NetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "6",
                                                            {
                                                                "Ref": "NodeNetBIOSNames"
                                                            }
                                                        ]
                                                    },
                                                    "' -DriveLetters ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                                    },
                                                    " -DriveTypes ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                                    },
                                                    "\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "a-set-maxdop": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\SetMaxDOP.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-set-sqlinstancename": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Set-SQLInstanceName.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-remove-MSSQLSvcSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-remove-MSSQLSvcPortSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "6",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-add-windows-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode7",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface7",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "e-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                6,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]            
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateNode7Volume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode7Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode7Volume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode7Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode7Volume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode7Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface7"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "6",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode7WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode7",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode8": {
            "Type": "AWS::EC2::Instance",
            "Condition": "IsEightNodes",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "FetchResources"
                        ]
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode1WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "m-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "n-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "c-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode8",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface8",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                7,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]            
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateNode8Volume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode8Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode8Volume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode8Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateNode8Volume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode8Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface8"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "7",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode8WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode8",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "WSFCNode1",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Fn::If": [
                                "NewRole",
                                {
                                    "Ref": "WSFCRole"
                                },
                                {
                                    "Ref": "Ec2RoleName"
                                }
                            ]
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "LaunchWizardCFNSetup",
                            "PreConfigDSC",
                            "VolumesSetup",
                            "Prep",
                            "SQLIncludedConfigure",
                            "Configure",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " IsEnabled\" : false}"
                                    ]
                                }
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlha.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlha.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\WMF51.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/WMF51.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-sqlha-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlha.zip -SignatureFilePath C:\\cfn\\scripts\\sqlha.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-sqlha-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlha.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-WMF-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\WMF51.zip -SignatureFilePath C:\\cfn\\Installer\\WMF51.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-unpack-WMF": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\WMF51.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            },
                            "m-reinstallSSM": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Reinstall-SSMAgent.ps1 -Handler '",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "WSFCNode1WaitHandle"
                                                }
                                            },
                                            "' -stockAMI $",
                                            {
                                                "Ref": "SQLLicenseProvided"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            }
                        }
                    },
                    "LaunchWizardCFNSetup": {
                        "commands": {
                            "a-install-wmf-framework": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Install-WMFFramework.ps1",
                                "waitAfterCompletion": "forever"
                            },
                            "b-add-powershell-module-path": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\common\\Check-PSModulePath.ps1 -PathToCheck 'C:\\Program Files\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "f-init-launchwizard-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSLaunchWizardWaitHandle -Handle '",
                                            {
                                                "Ref": "WSFCNode2WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "PreConfigDSC": {
                        "commands": {
                            "a-run-pre-config-dsc": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\DSC\\PreConfigDSC.ps1 -VPCCIDR '",
                                            {
                                                "Ref": "VPCCIDR"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-add-windows-features": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Add-Features.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "c-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "VolumesSetup": {
                        "commands": {
                            "a-initialize-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\InitializeDisks.ps1",
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-resize-volumes": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Resize-Volumes.ps1",
                                            " -VolumeSizes ",
                                            {
                                                "Fn::Sub": "${Volume1Size},${Volume2Size},${Volume3Size}"
                                            },
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DeviceNames ",
                                            {
                                                "Fn::Sub": "${Volume1DeviceName},${Volume2DeviceName},${Volume3DeviceName}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-extend-disks": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Extend-Disks.ps1",
                                            " -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-tag-root-volume": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Tag-RootVolume.ps1 -UniqueID '",
                                            {
                                                "Ref": "UniqueID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Prep": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-update-DNS": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSServers.ps1 -ADServersPrivateIP '",
                                            {
                                                "Ref": "ADServersPrivateIP"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-install-windows-failover-clustering": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Install-WindowsFailoverClustering.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "SQLIncludedConfigure": {
                        "commands": {
                            "a-add-buildtin-admins-to-sysadmin": {
                                "command": "powershell.exe -Command \"C:\\cfn\\DSC\\PostConfigDSC.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Set-SQLTempdb.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "c-initialize-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\create-tempdbtask.ps1\"",
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "d-configure-sql": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-SQL.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -SQLServiceAccount '",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "' -SQLServiceAccountPasswordKey '",
                                            {
                                                "Ref": "SQLServiceAccountPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -DriveLetters ",
                                            {
                                                "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                            },
                                            " -DriveTypes ",
                                            {
                                                "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                            },
                                            " -TempDBonInstanceStore ",
                                            {
                                                "Ref": "TempDBonInstanceStore"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-configure-tempdb": {
                                "Fn::If": [
                                    "TempDB",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -Command \"C:\\cfn\\scripts\\sqlha\\Reconfigure-TempDB.ps1 -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -NetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "1",
                                                            {
                                                                "Ref": "NodeNetBIOSNames"
                                                            }
                                                        ]
                                                    },
                                                    "' -DriveLetters ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveLetter},${Volume2DriveLetter},${Volume3DriveLetter}"
                                                    },
                                                    " -DriveTypes ",
                                                    {
                                                        "Fn::Sub": "${Volume1DriveType},${Volume2DriveType},${Volume3DriveType}"
                                                    },
                                                    "\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "0"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "a-set-maxdop": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\SetMaxDOP.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-set-sqlinstancename": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Set-SQLInstanceName.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-configure-WSFC": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Configure-WSFC.ps1",
                                            " -WSFClusterName ",
                                            {
                                                "Ref": "WSFClusterName"
                                            },
                                            " -NumberOfSubnets ",
                                            {
                                                "Ref": "NumberOfSubnets"
                                            },
                                            " -NumberOfNodes ",
                                            {
                                                "Ref": "NumberOfNodes"
                                            },
                                            " -Node1IP2 ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface1",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            " -Node2IP2 ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            " -Node3IP2 ",
                                            {
                                                "Fn::If": [
                                                    "IsThreeNodes",
                                                    {
                                                        "Fn::Select": [
                                                            "0",
                                                            {
                                                                "Fn::GetAtt": [
                                                                    "NetworkInterface3",
                                                                    "SecondaryPrivateIpAddresses"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "noValue"
                                                ]
                                            },
                                            " -NodeNetBIOSNames ",
                                            {
                                                "Fn::Join": [
                                                    ",",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            " -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NodeAccessTypes '",
                                            {
                                                "Ref": "NodeAccessTypes"
                                            },
                                            "' -NetBIOSName '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-Enable-AlwaysOn": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\sqlha\\Enable-AlwaysOn.ps1",
                                            " -NumberOfNodes ",
                                            {
                                                "Ref": "NumberOfNodes"
                                            },
                                            " -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -NodeNetBIOSNames ",
                                            {
                                                "Fn::Join": [
                                                    ",",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-Set-Folder-Permissions": {
                                "Fn::If": [
                                    "CreateFSW",
                                    {
                                        "command": {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\common\\Set-Folder-Permissions.ps1",
                                                    " -DomainName '",
                                                    {
                                                        "Ref": "DomainDNSName"
                                                    },
                                                    "' -WSFClusterName '",
                                                    {
                                                        "Ref": "WSFClusterName"
                                                    },
                                                    "' -DomainAdminUser '",
                                                    {
                                                        "Ref": "DomainAdminUser"
                                                    },
                                                    "' -DomainAdminPasswordKey '",
                                                    {
                                                        "Ref": "DomainAdminPasswordKey"
                                                    },
                                                    "' -SQLServiceAccount '",
                                                    {
                                                        "Ref": "SQLServiceAccount"
                                                    },
                                                    "' -FileServerNetBIOSName '",
                                                    {
                                                        "Fn::Select": [
                                                            "0",
                                                            {
                                                                "Ref": "FSWParameters"
                                                            }
                                                        ]
                                                    },
                                                    "'\""
                                                ]
                                            ]
                                        },
                                        "waitAfterCompletion": "30"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "e-Set-ClusterQuorum": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\sqlha\\Set-ClusterQuorum.ps1",
                                            " -Witness $false",
                                            " -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPasswordKey '",
                                            {
                                                "Ref": "DomainAdminPasswordKey"
                                            },
                                            "' -WSFCNodeNames '",
                                            {
                                                "Fn::Join": [
                                                    ",",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            "' -NodeAccessTypes '",
                                            {
                                                "Ref": "NodeAccessTypes"
                                            },
                                            {
                                                "Fn::If": [
                                                    "CreateFSW",
                                                    "' -FileServerNetBIOSName '",
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::If": [
                                                    "CreateFSW",
                                                    {
                                                        "Fn::Select": [
                                                            "0",
                                                            {
                                                                "Ref": "FSWParameters"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    }
                                                ]
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-remove-MSSQLSvcSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-remove-MSSQLSvcPortSPN": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "SetSPN -d MSSQLSvc/",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "\\",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Ref": "NodeNetBIOSNames"
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-reboot": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "b-signal-ddb": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName WSFCNode2",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": 0
                            },
                            "c-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "d-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            },
                            "e-signal-success": {
                                "command": "powershell -Command \"Write-AWSLaunchWizardStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "isDH",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "DHIDS"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "HostResourceGroupArn": {
                    "Fn::If": [
                        "isHRG",
                        {
                            "Ref": "HRGID"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Affinity": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Tenancy": {
                    "Fn::If": [
                        "isDH",
                        "host",
                        {
                            "Fn::If": [
                                "isHRG",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "default"
                            ]
                        }
                    ]
                },
                "ImageId": {
                    "Ref": "SQLAMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]            
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "WSFCProfile"
                },
                "InstanceType": {
                    "Ref": "WSFCNodeInstanceType"
                },
                "Volumes": [
                    {
                        "Fn::If": [
                            "CreateVolume1",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode2Volume1"
                                },
                                "Device": {
                                    "Ref": "Volume1DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateVolume2",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode2Volume2"
                                },
                                "Device": {
                                    "Ref": "Volume2DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "CreateVolume3",
                            {
                                "VolumeId": {
                                    "Ref": "WSFCNode2Volume3"
                                },
                                "Device": {
                                    "Ref": "Volume3DeviceName"
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface2"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Select": [
                                "1",
                                {
                                    "Ref": "NodeNetBIOSNames"
                                }
                            ]
                        }
                    },
                    {
                        "Fn::If": [
                            "1SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SQLNodeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SQLNodeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "RootDriveSize"
                            },
                            "VolumeType": {
                                "Ref": "RootDriveType"
                            },
                            "Iops": {
                                "Fn::If": [
                                    "RootDriveIsIo1",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    ",",
                                                    {
                                                        "Ref": "VolumeIopsValues"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "if \"",
                                {
                                    "Ref": "SQLLicenseProvided"
                                },
                                "\" == \"false\" (",
                                "(powershell -c \"Invoke-WebRequest -Uri 'https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-win64-latest.msi' -OutFile 'C:\\cfn-agent.msi'\")&&((wmic product where \"description='aws-cfn-bootstrap' \" uninstall)&(start /wait C:\\Windows\\system32\\msiexec /passive /qn /i C:\\cfn-agent.msi))||((wmic product get name| findstr /i /C:\"aws-cfn-bootstrap\")||(",
                                "cfn-signal.exe -e 1 --reason=\"Failed to download CFN Agent msi and no CFN Agent installed on this instance.\"",
                                {
                                    "Fn::Base64": {
                                        "Ref": "WSFCNode2WaitHandle"
                                    }
                                },
                                ")))",
                                "</script>",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode2",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode1Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode1Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode1Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode2Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode2Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode2Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateVolume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode3Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode3Volume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode3Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode3Volume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode3Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode3Volume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode4Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode4Volume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "3",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode4Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode4Volume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "3",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode4Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode4Volume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "3",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode5Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode5Volume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "4",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode5Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode5Volume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "4",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode5Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode5Volume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "4",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode6Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode6Volume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "5",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode6Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode6Volume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "5",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode6Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode6Volume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "5",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode7Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode7Volume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "6",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode7Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode7Volume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "6",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode7Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode7Volume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "6",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode8Volume1": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode8Volume1",
            "Properties": {
                "Size": {
                    "Ref": "Volume1Size"
                },
                "VolumeType": {
                    "Ref": "Volume1Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol1IsIo1",
                        {
                            "Fn::Select": [
                                1,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "7",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode8Volume2": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode8Volume2",
            "Properties": {
                "Size": {
                    "Ref": "Volume2Size"
                },
                "VolumeType": {
                    "Ref": "Volume2Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol2IsIo1",
                        {
                            "Fn::Select": [
                                2,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "7",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCNode8Volume3": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateNode8Volume3",
            "Properties": {
                "Size": {
                    "Ref": "Volume3Size"
                },
                "VolumeType": {
                    "Ref": "Volume3Type"
                },
                "Iops": {
                    "Fn::If": [
                        "Vol3IsIo1",
                        {
                            "Fn::Select": [
                                3,
                                {
                                    "Fn::Split": [
                                        ",",
                                        {
                                            "Ref": "VolumeIopsValues"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "7",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Fn::If": [
                            "1VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VolumeTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VolumeTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "WSFCSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable the WSFC and SQL AlwaysOn Availability Group communications",
                "VpcId": {
                    "Ref": "VPCID"
                }
            }
        },
        "WSFCSecurityGroupIngressIcmp": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "icmp",
                "FromPort": "-1",
                "ToPort": "-1"
            }
        },
        "WSFCSecurityGroupIngressTcp135": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "135",
                "ToPort": "135"
            }
        },
        "WSFCSecurityGroupIngressTcp137": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "137",
                "ToPort": "137"
            }
        },
        "WSFCSecurityGroupIngressTcp445": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "445",
                "ToPort": "445"
            }
        },
        "WSFCSecurityGroupIngressTcp1433": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "1433",
                "ToPort": "1434"
            }
        },
        "WSFCSecurityGroupIngressTcp3343": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "3343",
                "ToPort": "3343"
            }
        },
        "WSFCSecurityGroupIngressTcp5022": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "5022",
                "ToPort": "5022"
            }
        },
        "WSFCSecurityGroupIngressTcp5985": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "5985",
                "ToPort": "5985"
            }
        },
        "WSFCSecurityGroupIngressUdp137": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "udp",
                "FromPort": "137",
                "ToPort": "137"
            }
        },
        "WSFCSecurityGroupIngressUdp3343": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "udp",
                "FromPort": "3343",
                "ToPort": "3343"
            }
        },
        "WSFCSecurityGroupIngressUdp1434": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "WSFCSecurityGroup"
                },
                "IpProtocol": "udp",
                "FromPort": "1434",
                "ToPort": "1434"
            }
        },
        "SQLServerAccessSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "Allows access to SQL Servers"
            }
        },
        "WSFCClientSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SQL Client access ports",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1433",
                        "SourceSecurityGroupId": {
                            "Ref": "SQLServerAccessSecurityGroup"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "DomainAdmin": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Ref": "DomainDNSName"
                        },
                        "\\",
                        {
                            "Ref": "DomainAdminUser"
                        }
                    ]
                ]
            },
            "Description": "Domain administrator account"
        },
        "LocalAdmin": {
            "Value": "Administrator",
            "Description": "Please retrieve Administrator password of the instance"
        },
        "WSFCNode1NetBIOSName": {
            "Value": {
                "Fn::Select": [
                    "0",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 1st WSFC Node"
        },
        "WSFCNode2NetBIOSName": {
            "Value": {
                "Fn::Select": [
                    "1",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 2nd WSFC Node"
        },
        "WSFCNode3NetBIOSName": {
            "Condition": "IsThreeNodes",
            "Value": {
                "Fn::Select": [
                    "2",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 3rd WSFC Node"
        },
        "WSFCNode4NetBIOSName": {
            "Condition": "IsFourNodes",
            "Value": {
                "Fn::Select": [
                    "3",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 4th WSFC Node"
        },
        "WSFCNode5NetBIOSName": {
            "Condition": "IsFiveNodes",
            "Value": {
                "Fn::Select": [
                    "4",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 5th WSFC Node"
        },
        "WSFCNode6NetBIOSName": {
            "Condition": "IsSixNodes",
            "Value": {
                "Fn::Select": [
                    "5",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 6th WSFC Node"
        },
        "WSFCNode7NetBIOSName": {
            "Condition": "IsSevenNodes",
            "Value": {
                "Fn::Select": [
                    "6",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 7th WSFC Node"
        },
        "WSFCNode8NetBIOSName": {
            "Condition": "IsEightNodes",
            "Value": {
                "Fn::Select": [
                    "7",
                    {
                        "Ref": "NodeNetBIOSNames"
                    }
                ]
            },
            "Description": "NetBIOS name of the 8th WSFC Node"
        },
        "SQLServerAccessSecurityGroupID": {
            "Value": {
                "Ref": "SQLServerAccessSecurityGroup"
            },
            "Description": "Add instances that require access to SQL to this Security Group"
        },
        "WSFCNode1ARN": {
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode1}"
            },
            "Description": "ARN of the 1st WSFC Node"
        },
        "WSFCNode2ARN": {
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode2}"
            },
            "Description": "ARN of the 2nd WSFC Node"
        },
        "WSFCNode3ARN": {
            "Condition": "IsThreeNodes",
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode3}"
            },
            "Description": "ARN of the 3rd WSFC Node"
        },
        "WSFCNode4ARN": {
            "Condition": "IsFourNodes",
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode4}"
            },
            "Description": "ARN of the 4th WSFC Node"
        },
        "WSFCNode5ARN": {
            "Condition": "IsFiveNodes",
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode5}"
            },
            "Description": "ARN of the 5th WSFC Node"
        },
        "WSFCNode6ARN": {
            "Condition": "IsSixNodes",
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode6}"
            },
            "Description": "ARN of the 6th WSFC Node"
        },
        "WSFCNode7ARN": {
            "Condition": "IsSevenNodes",
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode7}"
            },
            "Description": "ARN of the 7th WSFC Node"
        },
        "WSFCNode8ARN": {
            "Condition": "IsEightNodes",
            "Value": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${WSFCNode8}"
            },
            "Description": "ARN of the 8th WSFC Node"
        }
    }
}
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This workload template deploys a SqlFSx instance in an existing VPC. **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "RouteTable1Id",
                        "RouteTable2Id"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft Active Directory Configuration"
                    },
                    "Parameters": [
                        "DomainDNSName",
                        "DomainAdminUser",
                        "DomainAdminSecretName",
                        "DomainMemberSGID",
                        "ADDnsIpAddresses",
                        "ManagedADDirectoryId"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "SqlFSxServerNetBIOSName1",
                        "SqlFSxServerNetBIOSName2",
                        "KeyPairName",
                        "WorkloadInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon FSx Windows File Share Configuration"
                    },
                    "Parameters": [
                        "FileShareVolumeSize",
                        "FileShareThroughputCapacity"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft SQL Server FCI configurations"
                    },
                    "Parameters": [
                        "MSSQLMediaBucketName",
                        "MSSQLMediaPathKey",
                        "SqlFSxWSFCName",
                        "SqlFSxFCIName",
                        "SQLAdminAccounts",
                        "SQLServiceAccountSecret",
                        "AMIID",
                        "BYOLAMI",
                        "SQLStorageVMName",
                        "SqlDataLunSize",
                        "SqlLogLunSize",
                        "SQLigroupname",
                        "SQLvolname",
                        "VolumeStorage"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Configuration"
                    },
                    "Parameters": [
                        "AssetsBucketName",
                        "AssetsS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "KeyPairName": {
                    "default": "Key Pair Name for the Ec2 instances"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet 1 ID for the first SQL node for existing VPC e.g subnet-000dc866d93550eb0"
                },
                "PrivateSubnet2ID": {
                    "default": "Private Subnet 2 ID for the second SQL Node existing VPC e.g subnet-000dc866d93550eb0"
                },
                "RouteTable1Id": {
                    "default": "Route Table ID of private subnet 1"
                },
                "RouteTable2Id": {
                    "default": "Route Table ID of private subnet 2"
                },
                "AssetsBucketName": {
                    "default": "S3 Bucket Name hosting LauncWizard Assets. e.g LaunchWizard-Assets."
                },
                "AssetsS3RegionCode": {
                    "default": "S3 bucket region for the bucket hosting LaunchWizard Assets e.g s3.us-east-1"
                },
                "AssetsS3KeyPrefix": {
                    "default": "S3 Key Prefix for LaunchWizard assets e.g launchwizardprefix/"
                },
                "AMIID": {
                    "default": "AMI ID of the AMI used to launch Instances e.g ami-0b8aa9827ffff6e39"
                },
                "VPCID": {
                    "default": "VPC ID if the instances are launched in an exiting VPC e.g vpc-04e3ac96d2f5ac570"
                },
                "VPCCIDR": {
                    "default": "VPCCIDR for instances launched in existing VPC. Also used for setting up security groups. e.g 10.0.0.8/16"
                },
                "WorkloadInstanceType": {
                    "default": "Workload Servers Instance Type for SQL EC2 Instances e.g r4.xlarge"
                },
                "DomainAdminSecretName": {
                    "default": "Domain Admin Secret Name for the Domain Admin user in Secrets Manager e.g 'LaunchWizard-Admin'"
                },
                "SQLServiceAccountSecret": {
                    "default": "Secret Name for the SQL Admin user in Secrets Manager e.g 'LaunchWizard-Admin'"
                },
                "DomainAdminUser": {
                    "default": "Domain Admin User Name e.g Administrator"
                },
                "DomainDNSName": {
                    "default": "Domain DNS Name e.g example.com"
                },
                "DomainMemberSGID": {
                    "default": "Security Group ID for AD Domain Members e.g sg-0b7b0431023b4208a"
                },
                "SqlFSxServerNetBIOSName1": {
                    "default": "Server1 NetBIOS Name e.g SQLFSX01"
                },
                "SqlFSxServerNetBIOSName2": {
                    "default": "Server2 NetBIOS Name e.g SQLFSX02"
                },
                "FileShareVolumeSize": {
                    "default": "File share volume size in GB e.g 24"
                },
                "FileShareThroughputCapacity": {
                    "default": "File share throughput capacity (MB/s) e.g 16 MBps"
                },
                "CreateNewAD": {
                    "default": "Boolean flag to create a new managed AD instance or use existing AD. Sample values are 'true' or 'false'"
                },
                "ManagedADDirectoryId": {
                    "default": "Managed AD Directory ID of the Managed AD created as part of build. e.g d-906764b299"
                },
                "ADDnsIpAddresses": {
                    "default": "Comma Seperated List of DNS addresses for existing AD e.g 10.0.0.10,10.0.16.10"
                },
                "SQLStorageVMName": {
                    "default": "SQL Storage VM Name for ONTAP"
                },
                "SQLigroupname": {
                    "default": "SQL igroup Name"
                },
                "SQLvolname": {
                    "default": "SQL igroup Name"
                },
                "VolumeStorage": {
                    "default": "SQL volume size"
                }
            }
        }
    },
    "Parameters": {
        "Ec2RoleName": {
            "Default": "AmazonEC2RoleForLaunchWizard",
            "Description": "EC2 instance role name",
            "Type": "String"
        },
        "EnableLogFeature": {
            "Default": true,
            "Description": "Enable Logs",
            "Type": "String"
        },
        "LogGroupName": {
            "Default": "",
            "Description": "A name for the log group",
            "Type": "String"
        },
        "UniqueID": {
            "Default": "UID123",
            "Description": "Automation Execution Unique Id.",
            "Type": "String"
        },
        "AMIID": {
            "Description": "AMI ID of the AMI to use",
            "Type": "String",
            "Default": "ami-0c5a80eaf30fe03ed"
        },
        "BYOLAMI": {
            "Default": "true",
            "Description": "Whether the AMI is LI or BYOL",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 key pair. All instances will launch with this key pair.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "FileShareVolumeSize": {
            "Default": "32",
            "Description": "Capacity of the volume used to store SQL Server files. Minimum value is 32 and maximum 65536. (GB)",
            "Type": "Number",
            "MinValue": 32,
            "MaxValue": 65536
        },
        "FileShareThroughputCapacity": {
            "Default": "8",
            "Description": "File share throughput capacity, in 2 to the n'th power increments, where 3 <= n <= 11, i.e. (between 2^3 and 2^11).",
            "Type": "Number",
            "AllowedValues": [
                8,
                16,
                32,
                64,
                128,
                256,
                512,
                1024,
                2048
            ]
        },
        "PrivateSubnet1ID": {
            "Description": "ID of private subnet 1 in Availability Zone 1 for the Workload (e.g., subnet-a0246dcd)",
            "Type": "String",
            "Default": "subnet-06d3ae4d7db904da8"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of private subnet 2 in Availability Zone 2 for the Workload (e.g., subnet-a0246dcd)",
            "Type": "String",
            "Default": "subnet-086691b7cad9e8c8d"
        },
        "AssetsBucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "launchwizardscript-alpha-us-east-1",
            "Description": "S3 bucket name for the LaunchWizard assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "AssetsS3RegionCode": {
            "Default": "s3.us-east-1",
            "Description": "The AWS Region where the LaunchWizard S3 bucket (AssetsBucketName) is hosted. When using your own bucket, you must specify this value.",
            "Type": "String"
        },
        "AssetsS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Launch Wizard key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "launchwizardscripts/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of your existing VPC for deployment",
            "Type": "String",
            "Default": "vpc-055e3a6db6e3a1ecb"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "SqlFSxServerNetBIOSName1": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "SqlFSx1",
            "Description": "NetBIOS name of the SQL server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "SqlFSxServerNetBIOSName2": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "SqlFSx2",
            "Description": "NetBIOS name of the SQL server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "SqlFSxWSFCName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "LW-WSFC",
            "Description": "Windows Server failover cluster name",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "SqlFSxFCIName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "LW-SqlFCI",
            "Description": "FCI name",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "DomainAdminSecretName": {
            "Description": "arn for the secret for domain admin.",
            "Type": "String"
        },
        "SQLServiceAccountSecret": {
            "Description": "arn for the secret for sql service account.",
            "Type": "String"
        },
        "DomainAdminUser": {
            "AllowedPattern": "([a-zA-Z0-9]+(\\.|_|-|@)*)+",
            "Default": "admin",
            "Description": "User name for the account that will be used as Domain Administrator. This is separate from the default \"Administrator\" account",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+\\..+",
            "Default": "sqlad.com",
            "Description": "Fully qualified domain name (FQDN) e.g. example.com",
            "MaxLength": "255",
            "MinLength": "2",
            "Type": "String"
        },
        "ADDnsIpAddresses": {
            "Description": "DNS IP addresses. Comma-separated.",
            "MaxLength": "255",
            "MinLength": "2",
            "Type": "String",
            "Default": "10.0.24.2"
        },
        "DomainMemberSGID": {
            "Description": "ID of the Domain Member Security Group (e.g., sg-9cb7d0e5)",
            "Type": "String"
        },
        "ManagedADDirectoryId": {
            "Description": "Managed AD Directory ID",
            "Type": "String",
            "Default": "d-9067515f27"
        },
        "WorkloadInstanceType": {
            "Default": "r5.2xlarge",
            "Description": "Type of EC2 instance for the Workload instances",
            "Type": "String"
        },
        "MSSQLMediaBucketName": {
            "Default": "LaunchWizard-sqlha",
            "Description": "The S3 bucket name wherefrom MSSQL media can be downloaded. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "MSSQLMediaPathKey": {
            "Default": "launchwizardscripts/sqlmedia/sqlserver.iso",
            "Description": "The S3 bucket key wherefrom MSSQL media can be downloaded. This string can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "SQLAdminAccounts": {
            "Default": "sqlsa",
            "Description": "Comma-separated user names will be used as MSSQL DB Administrator. It could be AD domain admin, other local or domain users.",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "CreateNewAD": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": true,
            "Description": "Create a New AD in your VPC with domain Admin user",
            "Type": "String"
        },
        "NumberOfNodes": {
            "Default": "2",
            "Description": "Enter the number of SQLServer nodes to create",
            "Type": "String"
        },
        "RouteTable1Id": {
            "Description": "Comma seperated list of all route table ids' for SQL subnets.",
            "Type": "String"
        },
        "RouteTable2Id": {
            "Description": "Comma seperated list of all route table ids' for SQL subnets.",
            "Type": "String"
        },
        "SQLSvmName": {
            "Description": "SQL Storage Machine Virtual Name",
            "Type": "String",
            "Default": "sql-svm01"
        },
        "SQLigroupname": {
            "Description": "SQL igroupname",
            "Type": "String",
            "Default": "SQLigroup"
        },
        "SQLvolname": {
            "Description": "SQL volumename",
            "Type": "String",
            "Default": "SQLCluster01"
        },
        "VolumeStorage": {
            "Description": "SQL volumesize in MB",
            "Type": "String",
            "Default": ""
        },
        "SqlDataLunSize": {
            "Description": "SQL data Lun size for ONTAP",
            "Type": "String"
        },
        "SqlLogLunSize": {
            "Description": "SQL logLUn Size for ONTAP",
            "Type": "String"
        }
    },
    "Conditions": {
        "ADSGNotSelected": {
            "Fn::Equals": [
                {
                    "Ref": "DomainMemberSGID"
                },
                ""
            ]
        },
        "LogFeatureEnabled": {
            "Fn::Equals": [
                {
                    "Ref": "EnableLogFeature"
                },
                "true"
            ]
        },
        "UsingDefaultBucket": {
            "Fn::Equals": [
                {
                    "Ref": "AssetsBucketName"
                },
                "LaunchWizard-sqlha-templates"
            ]
        },
        "MAD": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ManagedADDirectoryId"
                        },
                        ""
                    ]
                }
            ]
        },
        "NOMAD": {
            "Fn::Equals": [
                {
                    "Ref": "ManagedADDirectoryId"
                },
                ""
            ]
        },
        "UsingSingleRouteTable": {
            "Fn::Equals": [
                {
                    "Ref": "RouteTable1Id"
                },
                {
                    "Ref": "RouteTable2Id"
                }
            ]
        }
    },
    "Rules": {
        "KeyPairsNotEmpty": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::EachMemberEquals": [
                                    {
                                        "Fn::RefAll": "AWS::EC2::KeyPair::KeyName"
                                    },
                                    ""
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "Kay Pair must not be empty"
                }
            ]
        },
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must be in the VPC"
                }
            ]
        }
    },
    "Resources": {
        "WorkflowDB": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "",
                        [
                            "LaunchWizard-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "NodeName",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "IPAddress",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "NodeName",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "IPAddress",
                        "KeyType": "RANGE"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST"
            }
        },
        "FSXAdmin": {
            "Type": "AWS::SecretsManager::Secret",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-fsxadmin"
                },
                "Description": "Administrator Password for AD",
                "GenerateSecretString": {
                    "SecretStringTemplate": "{\"username\": \"fsxadmin\"}",
                    "GenerateStringKey": "password",
                    "PasswordLength": 8,
                    "ExcludeCharacters": "\"@/\\"
                }
            }
        },
        "FSXAdminSecretResourcePolicy": {
            "Type": "AWS::SecretsManager::ResourcePolicy",
            "Properties": {
                "SecretId": {
                    "Ref": "FSXAdmin"
                },
                "ResourcePolicy": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Resource": "*",
                            "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:CreateSecret",
                                "secretsmanager:GetRandomPassword"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::Sub": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/AmazonEC2RoleForLaunchWizard"
                                }
                            }
                        }
                    ]
                }
            }
        },
        "NetworkInterface1": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Ref": "PrivateSubnet1ID"
                },
                "GroupSet": {
                    "Fn::If": [
                        "ADSGNotSelected",
                        [
                            {
                                "Ref": "WorkloadSecurityGroup"
                            },
                            {
                                "Ref": "ONTAPSecurityGroup"
                            }
                        ],
                        [
                            {
                                "Ref": "DomainMemberSGID"
                            },
                            {
                                "Ref": "WorkloadSecurityGroup"
                            },
                            {
                                "Ref": "ONTAPSecurityGroup"
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SqlFSxServerNetBIOSName1"
                        }
                    }
                ]
            }
        },
        "NetworkInterface2": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SecondaryPrivateIpAddressCount": 2,
                "SubnetId": {
                    "Ref": "PrivateSubnet2ID"
                },
                "GroupSet": {
                    "Fn::If": [
                        "ADSGNotSelected",
                        [
                            {
                                "Ref": "WorkloadSecurityGroup"
                            },
                            {
                                "Ref": "ONTAPSecurityGroup"
                            }
                        ],
                        [
                            {
                                "Ref": "DomainMemberSGID"
                            },
                            {
                                "Ref": "WorkloadSecurityGroup"
                            },
                            {
                                "Ref": "ONTAPSecurityGroup"
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SqlFSxServerNetBIOSName2"
                        }
                    }
                ]
            }
        },
        "DisableIMDSv1": {
            "Type": "AWS::EC2::LaunchTemplate",
            "Properties": {
              "LaunchTemplateData": {
                "MetadataOptions": {
                  "HttpEndpoint": "enabled",
                  "HttpTokens": "required"
                }
              }
            }
        },
        "SqlFSxInstance1": {
            "Type": "AWS::EC2::Instance",
            "Condition": "NOMAD",
            "DependsOn": "Volume",
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT135M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "Ec2RoleName"
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "InitialSetup",
                            "OntapConfig",
                            "InstancePrep",
                            "ConfigureInstance",
                            "ConfigureFCI",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " { \"IsEnabled\" : false}"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-enableSSM": {
                                "command": "powershell.exe -Command \"Set-Service -Name AmazonSSMAgent -StartupType Automatic\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restartSSM": {
                                "command": "powershell.exe -Command \"Restart-Service AmazonSSMAgent -Force\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-sqlfci-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlfci.zip -SignatureFilePath C:\\cfn\\scripts\\sqlfci.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-unpack-sqlfci-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlfci.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlspcu-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\sqlspcu.zip -SignatureFilePath C:\\cfn\\Installer\\sqlspcu.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-unpack-sqlspcu-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\sqlspcu.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "m-verify-sqlontap-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlontap.zip -SignatureFilePath C:\\cfn\\scripts\\sqlontap.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "n-unpack-sqlontap-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlontap.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "o-verify-powershell-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\powershell.zip -SignatureFilePath C:\\cfn\\Installer\\powershell.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "p-unpack-powershell-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\powershell.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InitialSetup": {
                        "commands": {
                            "a-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-failover-cluster-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AmznFailoverCluster.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-initialize-disks": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\InitializeDisks.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-install-featuresandmodules": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-FeaturesAndModules.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "h-config-LCM": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\LCM-Config.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "i-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Ref": "SqlFSxServerNetBIOSName1"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "OntapConfig": {
                        "commands": {
                            "a-install-ontap-prereqs": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\Install-FCI-Prereqs-ONTAP.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-install-powershell-7": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\install-powershell7.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "d-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "e-configure-ontap": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "pwsh -Command \"C:\\cfn\\scripts\\sqlontap\\Configure-ONTAP.ps1 -AdminSecret '",
                                            {
                                                "Ref": "FSXAdmin"
                                            },
                                            "' -SQLVMName '",
                                            {
                                                "Ref": "SQLSvmName"
                                            },
                                            "' -datalunsize '",
                                            {
                                                "Ref": "SqlDataLunSize"
                                            },
                                            "' -loglunsize '",
                                            {
                                                "Ref": "SqlLogLunSize"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "' -volume '",
                                            {
                                                "Ref": "SQLvolname"
                                            },
                                            "' -IGROUP '",
                                            {
                                                "Ref": "SQLigroupname"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-connect-ontap-instance": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Connect-ONTAPInstance.ps1 -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "g-init-iscsi-disk": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Initialize-Iscsidisk.ps1 -DataDriveSize '",
                                            {
                                                "Ref": "SqlDataLunSize"
                                            },
                                            "' -LogDriveSize '",
                                            {
                                                "Ref": "SqlLogLunSize"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InstancePrep": {
                        "commands": {
                            "a-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Add-DNSEntry.ps1 -ADServerPrivateIP '",
                                            {
                                                "Fn::Select": [
                                                    0,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Ref": "ADDnsIpAddresses"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "f-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "h-create-sql-account": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Create-ADServiceAccountDSC.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminSecretKey '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -ServiceAccountUser '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -ServiceAccountSecretKey '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-uninstall-sql-for-SQLLI": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Uninstall-SQL.ps1 -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "l-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "ConfigureInstance": {
                        "commands": {
                            "a-add-cluster-primary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Node1AddCluster.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-configure-cluster-primary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Node1ONTAPClusterConfig.ps1 -WSFCNode1PrivateIP2 '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface1",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-set-wsfc-cluster-permission": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Configure-MAD-ACLs.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-query-ddbtable-fci-prep": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Query-DDBTable-FCI.ps1",
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -NodeCount 1",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "ConfigureFCI": {
                        "commands": {
                            "a-prepare-fci": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\prepare-fci.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -SqlUserSecret '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "' -MSSQLMediaBucket '",
                                            {
                                                "Ref": "MSSQLMediaBucketName"
                                            },
                                            "' -MSSQLMediaKey '",
                                            {
                                                "Ref": "MSSQLMediaPathKey"
                                            },
                                            "' -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "d-complete-fci": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Complete-FCI-ONTAP.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -Node1FciIp '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface1",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -Node1SubnetId '",
                                            {
                                                "Ref": "PrivateSubnet1ID"
                                            },
                                            "' -Node2FciIp '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -Node2SubnetId '",
                                            {
                                                "Ref": "PrivateSubnet2ID"
                                            },
                                            "' -FCIName '",
                                            {
                                                "Ref": "SqlFSxFCIName"
                                            },
                                            "' -SQLAdminAccounts '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "f-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-Install-sqlcu": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-sqlcu.ps1\"",
                                "waitAfterCompletion": "30"
                            },
                            "h-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "i-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "j-signal-ddb-fci-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName SqlFSxInstance1-fci-complete",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-query-ddbtable-cu-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Query-DDBTable-FCI.ps1",
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -NodeCount 3",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-remove-ddbtable": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Remove-DDBTable.ps1 -DDBTableName '",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "c-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "d-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-signal-resource": {
                                "command": {
                                    "Fn::Sub": "cfn-signal.exe -e %ERRORLEVEL% --resource SqlFSxInstance1 --stack ${AWS::StackName} --region ${AWS::Region}\n"
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "AMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "LaunchWizardSqlFSxProfile"
                },
                "InstanceType": {
                    "Ref": "WorkloadInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface1"
                        },
                        "DeviceIndex": 0
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SqlFSxServerNetBIOSName1"
                        }
                    },
                    {
                        "Key": "FCIName",
                        "Value": {
                            "Ref": "SqlFSxFCIName"
                        }
                    },
                    {
                        "Key": "FCIRole",
                        "Value": "Primary"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r SqlFSxInstance1",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "SqlFSxInstance2": {
            "Type": "AWS::EC2::Instance",
            "Condition": "NOMAD",
            "DependsOn": "Volume",
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT120M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "Ec2RoleName"
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "InitialSetup",
                            "OntapConfig",
                            "InstancePrep",
                            "ConfigureInstance",
                            "ConfigureFCI",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " { \"IsEnabled\" : false}"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-enableSSM": {
                                "command": "powershell.exe -Command \"Set-Service -Name AmazonSSMAgent -StartupType Automatic\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restartSSM": {
                                "command": "powershell.exe -Command \"Restart-Service AmazonSSMAgent -Force\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-sqlfci-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlfci.zip -SignatureFilePath C:\\cfn\\scripts\\sqlfci.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-unpack-sqlfci-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlfci.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlspcu-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\sqlspcu.zip -SignatureFilePath C:\\cfn\\Installer\\sqlspcu.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-unpack-sqlspcu-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\sqlspcu.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "m-verify-sqlontap-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlontap.zip -SignatureFilePath C:\\cfn\\scripts\\sqlontap.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "n-unpack-sqlontap-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlontap.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "o-verify-powershell-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\powershell.zip -SignatureFilePath C:\\cfn\\Installer\\powershell.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "p-unpack-powershell-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\powershell.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InitialSetup": {
                        "commands": {
                            "a-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-failover-cluster-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AmznFailoverCluster.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-initialize-disks": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\InitializeDisks.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-install-featuresandmodules": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-FeaturesAndModules.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "h-config-LCM": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\LCM-Config.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "i-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Ref": "SqlFSxServerNetBIOSName2"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "OntapConfig": {
                        "commands": {
                            "a-install-ontap-prereqs": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\Install-FCI-Prereqs-ONTAP.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-install-powershell-7": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\install-powershell7.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "d-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "e-add-node2-initiator": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Add-node2initiator.ps1 -AdminSecret '",
                                            {
                                                "Ref": "FSXAdmin"
                                            },
                                            "' -SQLVMName '",
                                            {
                                                "Ref": "SQLSvmName"
                                            },
                                            "' -igroup '",
                                            {
                                                "Ref": "SQLigroupname"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-connect-ontap-instance": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Connect-ONTAPInstance.ps1 -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InstancePrep": {
                        "commands": {
                            "a-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Add-DNSEntry.ps1 -ADServerPrivateIP '",
                                            {
                                                "Fn::Select": [
                                                    0,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Ref": "ADDnsIpAddresses"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "f-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "h-create-sql-account": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Create-ADServiceAccountDSC.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminSecretKey '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -ServiceAccountUser '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -ServiceAccountSecretKey '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-uninstall-sql-for-SQLLI": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Uninstall-SQL.ps1 -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "l-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "ConfigureInstance": {
                        "commands": {
                            "a-add-cluster-secondary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\AdditionalNodeAddCluster.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-configure-cluster-secondary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\AdditionalNodeClusterConfig.ps1 -WSFCNode2PrivateIP2 '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-set-wsfc-cluster-permission": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Configure-MAD-ACLs.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-add-secondary-Cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Add-SecondaryNode.ps1 -WSFCNode2PrivateIP2 '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -Node2SubnetId '",
                                            {
                                                "Ref": "PrivateSubnet2ID"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "60"
                            }
                        }
                    },
                    "ConfigureFCI": {
                        "commands": {
                            "a-prepare-fci": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\prepare-fci.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -SqlUserSecret '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "' -MSSQLMediaBucket '",
                                            {
                                                "Ref": "MSSQLMediaBucketName"
                                            },
                                            "' -MSSQLMediaKey '",
                                            {
                                                "Ref": "MSSQLMediaPathKey"
                                            },
                                            "' -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "d-signal-ddb-fci-prep": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName SqlFSxInstance2-fci-prep",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-query-ddbtable-fci-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Query-DDBTable-FCI.ps1",
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -NodeCount 2",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-Install-sqlcu": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-sqlcu.ps1\"",
                                "waitAfterCompletion": "30"
                            },
                            "g-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "h-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "i-signal-ddb-cu-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName SqlFSxInstance2-cu-complete",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "c-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-signal-resource": {
                                "command": {
                                    "Fn::Sub": "cfn-signal.exe -e %ERRORLEVEL% --resource SqlFSxInstance2 --stack ${AWS::StackName} --region ${AWS::Region}\n"
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "AMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "LaunchWizardSqlFSxProfile"
                },
                "InstanceType": {
                    "Ref": "WorkloadInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface2"
                        },
                        "DeviceIndex": 0
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SqlFSxServerNetBIOSName2"
                        }
                    },
                    {
                        "Key": "FCIName",
                        "Value": {
                            "Ref": "SqlFSxFCIName"
                        }
                    },
                    {
                        "Key": "FCIRole",
                        "Value": "Secondary"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r SqlFSxInstance2",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "FSxONTAPFileSystem": {
            "Type": "AWS::FSx::FileSystem",
            "Condition": "NOMAD",
            "Properties": {
                "FileSystemType": "ONTAP",
                "OntapConfiguration": {
                    "AutomaticBackupRetentionDays": 0,
                    "DailyAutomaticBackupStartTime": "01:00",
                    "DeploymentType": "MULTI_AZ_1",
                    "FsxAdminPassword": {
                        "Fn::Join": [
                            ":",
                            [
                                "{{resolve:secretsmanager",
                                {
                                    "Ref": "FSXAdmin"
                                },
                                "SecretString:password}}"
                            ]
                        ]
                    },
                    "PreferredSubnetId": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "RouteTableIds": {
                        "Fn::If": [
                            "UsingSingleRouteTable",
                            [
                                {
                                    "Ref": "RouteTable1Id"
                                }
                            ],
                            [
                                {
                                    "Ref": "RouteTable1Id"
                                },
                                {
                                    "Ref": "RouteTable2Id"
                                }
                            ]
                        ]
                    },
                    "ThroughputCapacity": {
                        "Ref": "FileShareThroughputCapacity"
                    },
                    "WeeklyMaintenanceStartTime": "4:16:30"
                },
                "StorageType": "SSD",
                "StorageCapacity": {
                    "Ref": "FileShareVolumeSize"
                },
                "SubnetIds": [
                    {
                        "Ref": "PrivateSubnet1ID"
                    },
                    {
                        "Ref": "PrivateSubnet2ID"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "ONTAPSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "StorageVirtualMachine": {
            "Type": "AWS::FSx::StorageVirtualMachine",
            "DependsOn": "FSxONTAPFileSystem",
            "Condition": "NOMAD",
            "Properties": {
                "FileSystemId": {
                    "Ref": "FSxONTAPFileSystem"
                },
                "Name": {
                    "Ref": "SQLSvmName"
                },
                "RootVolumeSecurityStyle": "NTFS",
                "SvmAdminPassword": {
                    "Fn::Join": [
                        ":",
                        [
                            "{{resolve:secretsmanager",
                            {
                                "Ref": "FSXAdmin"
                            },
                            "SecretString:password}}"
                        ]
                    ]
                }
            }
        },
        "Volume": {
            "Type": "AWS::FSx::Volume",
            "DependsOn": "StorageVirtualMachine",
            "Condition": "NOMAD",
            "Properties": {
                "Name": {
                    "Ref": "SQLvolname"
                },
                "OntapConfiguration": {
                    "JunctionPath": "/volume11",
                    "SecurityStyle": "UNIX",
                    "SizeInMegabytes": {
                        "Ref": "VolumeStorage"
                    },
                    "StorageEfficiencyEnabled": false,
                    "StorageVirtualMachineId": {
                        "Ref": "StorageVirtualMachine"
                    }
                },
                "VolumeType": "ONTAP"
            }
        },
        "SqlFSxInstanceMAD1": {
            "Type": "AWS::EC2::Instance",
            "Condition": "MAD",
            "DependsOn": "VolumeMAD",
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT135M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "Ec2RoleName"
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "InitialSetup",
                            "OntapConfig",
                            "InstancePrep",
                            "ConfigureInstance",
                            "ConfigureFCI",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " { \"IsEnabled\" : false}"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-enableSSM": {
                                "command": "powershell.exe -Command \"Set-Service -Name AmazonSSMAgent -StartupType Automatic\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restartSSM": {
                                "command": "powershell.exe -Command \"Restart-Service AmazonSSMAgent -Force\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-sqlfci-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlfci.zip -SignatureFilePath C:\\cfn\\scripts\\sqlfci.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-unpack-sqlfci-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlfci.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlspcu-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\sqlspcu.zip -SignatureFilePath C:\\cfn\\Installer\\sqlspcu.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-unpack-sqlspcu-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\sqlspcu.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "m-verify-sqlontap-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlontap.zip -SignatureFilePath C:\\cfn\\scripts\\sqlontap.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "n-unpack-sqlontap-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlontap.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "o-verify-powershell-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\powershell.zip -SignatureFilePath C:\\cfn\\Installer\\powershell.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "p-unpack-powershell-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\powershell.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InitialSetup": {
                        "commands": {
                            "a-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-failover-cluster-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AmznFailoverCluster.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-initialize-disks": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\InitializeDisks.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-install-featuresandmodules": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-FeaturesAndModules.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "h-config-LCM": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\LCM-Config.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "i-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Ref": "SqlFSxServerNetBIOSName1"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "OntapConfig": {
                        "commands": {
                            "a-install-ontap-prereqs": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\Install-FCI-Prereqs-ONTAP.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-install-powershell-7": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\install-powershell7.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "d-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "e-configure-ontap": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "pwsh -Command \"C:\\cfn\\scripts\\sqlontap\\Configure-ONTAP.ps1 -AdminSecret '",
                                            {
                                                "Ref": "FSXAdmin"
                                            },
                                            "' -SQLVMName '",
                                            {
                                                "Ref": "SQLSvmName"
                                            },
                                            "' -datalunsize '",
                                            {
                                                "Ref": "SqlDataLunSize"
                                            },
                                            "' -loglunsize '",
                                            {
                                                "Ref": "SqlLogLunSize"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "' -volume '",
                                            {
                                                "Ref": "SQLvolname"
                                            },
                                            "' -IGROUP '",
                                            {
                                                "Ref": "SQLigroupname"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-connect-ontap-instance": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Connect-ONTAPInstance.ps1 -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "g-init-iscsi-disk": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Initialize-Iscsidisk.ps1 -DataDriveSize '",
                                            {
                                                "Ref": "SqlDataLunSize"
                                            },
                                            "' -LogDriveSize '",
                                            {
                                                "Ref": "SqlLogLunSize"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InstancePrep": {
                        "commands": {
                            "a-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Add-DNSEntry.ps1 -ADServerPrivateIP '",
                                            {
                                                "Fn::Select": [
                                                    0,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Ref": "ADDnsIpAddresses"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "f-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "h-create-sql-account": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Create-ADServiceAccountDSC.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminSecretKey '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -ServiceAccountUser '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -ServiceAccountSecretKey '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-uninstall-sql-for-SQLLI": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Uninstall-SQL.ps1 -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "l-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "ConfigureInstance": {
                        "commands": {
                            "a-add-cluster-primary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Node1AddCluster.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-configure-cluster-primary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Node1ONTAPClusterConfig.ps1 -WSFCNode1PrivateIP2 '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface1",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-set-wsfc-cluster-permission": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Configure-MAD-ACLs.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-query-ddbtable-fci-prep": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Query-DDBTable-FCI.ps1",
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -NodeCount 1",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "ConfigureFCI": {
                        "commands": {
                            "a-prepare-fci": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\prepare-fci.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -SqlUserSecret '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "' -MSSQLMediaBucket '",
                                            {
                                                "Ref": "MSSQLMediaBucketName"
                                            },
                                            "' -MSSQLMediaKey '",
                                            {
                                                "Ref": "MSSQLMediaPathKey"
                                            },
                                            "' -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "d-complete-fci": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Complete-FCI-ONTAP.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -Node1FciIp '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface1",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -Node1SubnetId '",
                                            {
                                                "Ref": "PrivateSubnet1ID"
                                            },
                                            "' -Node2FciIp '",
                                            {
                                                "Fn::Select": [
                                                    "1",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -Node2SubnetId '",
                                            {
                                                "Ref": "PrivateSubnet2ID"
                                            },
                                            "' -FCIName '",
                                            {
                                                "Ref": "SqlFSxFCIName"
                                            },
                                            "' -SQLAdminAccounts '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "f-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-Install-sqlcu": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-sqlcu.ps1\"",
                                "waitAfterCompletion": "30"
                            },
                            "h-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "i-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "j-signal-ddb-fci-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName SqlFSxInstanceMAD1-fci-complete",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-query-ddbtable-cu-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Query-DDBTable-FCI.ps1",
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -NodeCount 3",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-remove-ddbtable": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Remove-DDBTable.ps1 -DDBTableName '",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "c-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "d-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-signal-resource": {
                                "command": {
                                    "Fn::Sub": "cfn-signal.exe -e %ERRORLEVEL% --resource SqlFSxInstanceMAD1 --stack ${AWS::StackName} --region ${AWS::Region}\n"
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "AMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "LaunchWizardSqlFSxProfile"
                },
                "InstanceType": {
                    "Ref": "WorkloadInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface1"
                        },
                        "DeviceIndex": 0
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SqlFSxServerNetBIOSName1"
                        }
                    },
                    {
                        "Key": "FCIName",
                        "Value": {
                            "Ref": "SqlFSxFCIName"
                        }
                    },
                    {
                        "Key": "FCIRole",
                        "Value": "Primary"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r SqlFSxInstanceMAD1",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "SqlFSxInstanceMAD2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "VolumeMAD",
            "Condition": "MAD",
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT120M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "Ec2RoleName"
                        },
                        "buckets": [
                            {
                                "Ref": "AssetsBucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "ConfigureCWLogs",
                            "FetchResources",
                            "ScriptSignatureVerificationandExtract",
                            "InitialSetup",
                            "OntapConfig",
                            "InstancePrep",
                            "ConfigureInstance",
                            "ConfigureFCI",
                            "Cleanup",
                            "Finalize"
                        ]
                    },
                    "ConfigureCWLogs": {
                        "files": {
                            "C:\\Program Files\\Amazon\\SSM\\Plugins\\awsCloudWatch\\AWS.EC2.Windows.CloudWatch.json": {
                                "content": {
                                    "Fn::If": [
                                        "LogFeatureEnabled",
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "{",
                                                    "  \"IsEnabled\" : true,",
                                                    "  \"EngineConfiguration\" : {",
                                                    "    \"PollInterval\" : \"00:00:05\",",
                                                    "    \"Components\" : [{",
                                                    "      \"Id\" : \"ApplicationEventLog\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"LogName\" : \"Application\",",
                                                    "        \"Levels\" : \"7\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"LogDirectoryPath\": \"C:\\\\cfn\\\\log\",",
                                                    "        \"TimestampFormat\": \"yyyy-MM-dd HH:mm:ss,fff\",",
                                                    "        \"Encoding\": \"ASCII\",",
                                                    "        \"Filter\": \"cfn-init.log\",",
                                                    "        \"CultureName\": \"en-US\",",
                                                    "        \"TimeZoneKind\": \"Local\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\": \"CloudWatchCfnInitLog\",",
                                                    "      \"FullName\": \"AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\": {",
                                                    "        \"AccessKey\": \"\",",
                                                    "        \"SecretKey\": \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    {
                                                        "Fn::Sub": "        \"LogGroup\": \"${LogGroupName}\","
                                                    },
                                                    "        \"LogStream\": \"{instance_id}\"",
                                                    "      }",
                                                    "    },",
                                                    "    {",
                                                    "      \"Id\" : \"CloudWatch\",",
                                                    "      \"FullName\" : \"AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch\",",
                                                    "      \"Parameters\" : {",
                                                    "        \"AccessKey\" : \"\",",
                                                    "        \"SecretKey\" : \"\",",
                                                    {
                                                        "Fn::Sub": "        \"Region\": \"${AWS::Region}\","
                                                    },
                                                    "        \"NameSpace\" : \"Windows/Default\"",
                                                    "      }",
                                                    "    }],",
                                                    "    \"Flows\": {",
                                                    "      \"Flows\": [",
                                                    "        \"CfnInitLog,CloudWatchCfnInitLog\"",
                                                    "      ]",
                                                    "    }",
                                                    "  }",
                                                    "}"
                                                ]
                                            ]
                                        },
                                        " { \"IsEnabled\" : false}"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-enableSSM": {
                                "command": "powershell.exe -Command \"Set-Service -Name AmazonSSMAgent -StartupType Automatic\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restartSSM": {
                                "command": "powershell.exe -Command \"Restart-Service AmazonSSMAgent -Force\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "FetchResources": {
                        "files": {
                            "C:\\cfn\\scripts\\Verify-Signature.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Verify-Signature.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/Unzip-Archive.ps1"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\common.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/common.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlfci.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlfci.zip.sig"
                                }
                            },
                            "C:\\cfn\\DSC.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip"
                                }
                            },
                            "C:\\cfn\\DSC.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/DSC.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForCFN.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardForSSM.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AWSLaunchWizardSQLUtility.zip.sig"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip"
                                }
                            },
                            "C:\\cfn\\modules\\AmznFailoverCluster.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/modules/AmznFailoverCluster.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\sqlspcu.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/sqlspcu.zip.sig"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip"
                                }
                            },
                            "C:\\cfn\\scripts\\sqlontap.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/scripts/sqlontap.zip.sig"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip"
                                }
                            },
                            "C:\\cfn\\Installer\\powershell.zip.sig": {
                                "source": {
                                    "Fn::Sub": "https://${AssetsBucketName}.${AssetsS3RegionCode}.${AWS::URLSuffix}/${AssetsS3KeyPrefix}sql/Installer/powershell.zip.sig"
                                }
                            }
                        }
                    },
                    "ScriptSignatureVerificationandExtract": {
                        "commands": {
                            "a-verify-common-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\common.zip -SignatureFilePath C:\\cfn\\scripts\\common.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-common-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\common.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "c-verify-DSC-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\DSC.zip -SignatureFilePath C:\\cfn\\DSC.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-DSC-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\DSC.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "e-verify-sqlfci-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlfci.zip -SignatureFilePath C:\\cfn\\scripts\\sqlfci.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "f-unpack-sqlfci-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlfci.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "g-verify-sqlspcu-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\sqlspcu.zip -SignatureFilePath C:\\cfn\\Installer\\sqlspcu.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "h-unpack-sqlspcu-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\sqlspcu.zip -Destination C:\\cfn",
                                "waitAfterCompletion": "0"
                            },
                            "i-verify-cfnmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "j-verify-ssmmodule-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "k-verify-sqlutility-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -SignatureFilePath C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "l-verify-failovercluster-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\modules\\AmznFailoverCluster.zip -SignatureFilePath C:\\cfn\\modules\\AmznFailoverCluster.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "m-verify-sqlontap-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\scripts\\sqlontap.zip -SignatureFilePath C:\\cfn\\scripts\\sqlontap.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "n-unpack-sqlontap-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\scripts\\sqlontap.zip -Destination C:\\cfn\\scripts",
                                "waitAfterCompletion": "0"
                            },
                            "o-verify-powershell-signature": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Verify-Signature.ps1 -FilePath C:\\cfn\\Installer\\powershell.zip -SignatureFilePath C:\\cfn\\Installer\\powershell.zip.sig",
                                "waitAfterCompletion": "0"
                            },
                            "p-unpack-powershell-scripts": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\Installer\\powershell.zip -Destination C:\\cfn\\Installer",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InitialSetup": {
                        "commands": {
                            "a-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForCFN.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardForSSM.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "c-unpack-launchwizard-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSLaunchWizardSQLUtility.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "d-unpack-failover-cluster-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AmznFailoverCluster.zip -Destination 'C:\\Program Files\\WindowsPowerShell\\Modules\\'",
                                "waitAfterCompletion": "0"
                            },
                            "e-initialize-disks": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\InitializeDisks.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "f-install-featuresandmodules": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-FeaturesAndModules.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "h-config-LCM": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\LCM-Config.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "i-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Rename-Computer.ps1 -Restart -NewName '",
                                            {
                                                "Ref": "SqlFSxServerNetBIOSName2"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "OntapConfig": {
                        "commands": {
                            "a-install-ontap-prereqs": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\Install-FCI-Prereqs-ONTAP.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-install-powershell-7": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\sqlontap\\install-powershell7.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "d-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "e-add-node2-initiator": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Add-node2initiator.ps1 -AdminSecret '",
                                            {
                                                "Ref": "FSXAdmin"
                                            },
                                            "' -SQLVMName '",
                                            {
                                                "Ref": "SQLSvmName"
                                            },
                                            "' -igroup '",
                                            {
                                                "Ref": "SQLigroupname"
                                            },
                                            "' -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-connect-ontap-instance": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlontap\\Connect-ONTAPInstance.ps1 -Stackname '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "InstancePrep": {
                        "commands": {
                            "a-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Enable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Add-DNSEntry.ps1 -ADServerPrivateIP '",
                                            {
                                                "Fn::Select": [
                                                    0,
                                                    {
                                                        "Fn::Split": [
                                                            ",",
                                                            {
                                                                "Ref": "ADDnsIpAddresses"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-update-dnssuffixlist": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DNSSuffixSearchList.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Join-Domain.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "f-open-WSFC-ports": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\OpenWSFCPorts.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-add-domadmin-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "h-create-sql-account": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Create-ADServiceAccountDSC.ps1 -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminSecretKey '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -ServiceAccountUser '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -ServiceAccountSecretKey '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-wait-for-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\Test-ADUser.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -Wait -TimeoutMinutes 60 -IntervalMinutes 1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-add-sqlservice-user-to-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy RemoteSigned ",
                                            "-Command \"",
                                            "C:\\cfn\\scripts\\common\\AddUserToGroup.ps1 -UserName '",
                                            {
                                                "Ref": "SQLAdminAccounts"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -GroupName 'Administrators'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-uninstall-sql-for-SQLLI": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Uninstall-SQL.ps1 -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "l-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "ConfigureInstance": {
                        "commands": {
                            "a-add-cluster-secondary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\AdditionalNodeAddCluster.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-computer": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Restart-Computer.ps1\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-configure-cluster-secondary-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\AdditionalNodeClusterConfig.ps1 -WSFCNode2PrivateIP2 '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-set-wsfc-cluster-permission": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Configure-MAD-ACLs.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-add-secondary-Cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Add-SecondaryNode.ps1 -WSFCNode2PrivateIP2 '",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "' -Node2SubnetId '",
                                            {
                                                "Ref": "PrivateSubnet2ID"
                                            },
                                            "' -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "' -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "60"
                            }
                        }
                    },
                    "ConfigureFCI": {
                        "commands": {
                            "a-prepare-fci": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\prepare-fci.ps1 -AdminSecret '",
                                            {
                                                "Ref": "DomainAdminSecretName"
                                            },
                                            "' -SqlUserSecret '",
                                            {
                                                "Ref": "SQLServiceAccountSecret"
                                            },
                                            "' -MSSQLMediaBucket '",
                                            {
                                                "Ref": "MSSQLMediaBucketName"
                                            },
                                            "' -MSSQLMediaKey '",
                                            {
                                                "Ref": "MSSQLMediaPathKey"
                                            },
                                            "' -AMIID '",
                                            {
                                                "Ref": "AMIID"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "d-signal-ddb-fci-prep": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName SqlFSxInstanceMAD2-fci-prep",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-query-ddbtable-fci-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Query-DDBTable-FCI.ps1",
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -NodeCount 2",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-Install-sqlcu": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Install-sqlcu.ps1\"",
                                "waitAfterCompletion": "30"
                            },
                            "g-restart-cluster-node": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Restart-Cluster-Node.ps1 -ClusterName '",
                                            {
                                                "Ref": "SqlFSxWSFCName"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "h-resume-cluster-node": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\sqlfci\\Resume-Cluster-Node.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "i-signal-ddb-cu-complete": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\common\\Update-DDBTable.ps1",
                                            " -Region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " -DDBTableName ",
                                            {
                                                "Ref": "WorkflowDB"
                                            },
                                            " -NodeName SqlFSxInstanceMAD2-cu-complete",
                                            " -IPAddress ",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NetworkInterface2",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Cleanup": {
                        "commands": {
                            "a-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\common\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-cleanup-scripts": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\scripts -Recurse -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "c-cleanup-DSC": {
                                "command": "powershell -Command \"Remove-Item C:\\cfn\\DSC* -Force -Recurse\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "Finalize": {
                        "commands": {
                            "a-signal-resource": {
                                "command": {
                                    "Fn::Sub": "cfn-signal.exe -e %ERRORLEVEL% --resource SqlFSxInstanceMAD2 --stack ${AWS::StackName} --region ${AWS::Region}\n"
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "AMIID"
                },
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "DisableIMDSv1"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "DisableIMDSv1",
                            "DefaultVersionNumber"
                        ]
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "LaunchWizardSqlFSxProfile"
                },
                "InstanceType": {
                    "Ref": "WorkloadInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface2"
                        },
                        "DeviceIndex": 0
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SqlFSxServerNetBIOSName2"
                        }
                    },
                    {
                        "Key": "FCIName",
                        "Value": {
                            "Ref": "SqlFSxFCIName"
                        }
                    },
                    {
                        "Key": "FCIRole",
                        "Value": "Secondary"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "",
                                "<powershell>",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r SqlFSxInstanceMAD2",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "FSxONTAPFileSystemMAD": {
            "Type": "AWS::FSx::FileSystem",
            "Condition": "MAD",
            "Properties": {
                "FileSystemType": "ONTAP",
                "OntapConfiguration": {
                    "AutomaticBackupRetentionDays": 0,
                    "DailyAutomaticBackupStartTime": "01:00",
                    "DeploymentType": "MULTI_AZ_1",
                    "FsxAdminPassword": {
                        "Fn::Join": [
                            ":",
                            [
                                "{{resolve:secretsmanager",
                                {
                                    "Ref": "FSXAdmin"
                                },
                                "SecretString:password}}"
                            ]
                        ]
                    },
                    "PreferredSubnetId": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "RouteTableIds": {
                        "Fn::If": [
                            "UsingSingleRouteTable",
                            [
                                {
                                    "Ref": "RouteTable1Id"
                                }
                            ],
                            [
                                {
                                    "Ref": "RouteTable1Id"
                                },
                                {
                                    "Ref": "RouteTable2Id"
                                }
                            ]
                        ]
                    },
                    "ThroughputCapacity": {
                        "Ref": "FileShareThroughputCapacity"
                    },
                    "WeeklyMaintenanceStartTime": "4:16:30"
                },
                "StorageType": "SSD",
                "StorageCapacity": {
                    "Ref": "FileShareVolumeSize"
                },
                "SubnetIds": [
                    {
                        "Ref": "PrivateSubnet1ID"
                    },
                    {
                        "Ref": "PrivateSubnet2ID"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "ONTAPSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "StorageVirtualMachineMAD": {
            "Type": "AWS::FSx::StorageVirtualMachine",
            "DependsOn": "FSxONTAPFileSystemMAD",
            "Condition": "MAD",
            "Properties": {
                "FileSystemId": {
                    "Ref": "FSxONTAPFileSystemMAD"
                },
                "Name": {
                    "Ref": "SQLSvmName"
                },
                "RootVolumeSecurityStyle": "NTFS",
                "SvmAdminPassword": {
                    "Fn::Join": [
                        ":",
                        [
                            "{{resolve:secretsmanager",
                            {
                                "Ref": "FSXAdmin"
                            },
                            "SecretString:password}}"
                        ]
                    ]
                }
            }
        },
        "VolumeMAD": {
            "Type": "AWS::FSx::Volume",
            "DependsOn": "StorageVirtualMachineMAD",
            "Condition": "MAD",
            "Properties": {
                "Name": {
                    "Ref": "SQLvolname"
                },
                "OntapConfiguration": {
                    "JunctionPath": "/volume11",
                    "SecurityStyle": "UNIX",
                    "SizeInMegabytes": {
                        "Ref": "VolumeStorage"
                    },
                    "StorageEfficiencyEnabled": false,
                    "StorageVirtualMachineId": {
                        "Ref": "StorageVirtualMachineMAD"
                    }
                },
                "VolumeType": "ONTAP"
            }
        },
        "LaunchWizardSqlFSxProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "Ec2RoleName"
                    }
                ],
                "Path": "/"
            }
        },
        "WorkloadSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow access to the Workload instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": -1,
                        "FromPort": -1,
                        "ToPort": -1,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 53,
                        "ToPort": 53,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 53,
                        "ToPort": 53,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 88,
                        "ToPort": 88,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 88,
                        "ToPort": 88,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 464,
                        "ToPort": 464,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 464,
                        "ToPort": 464,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 389,
                        "ToPort": 389,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 389,
                        "ToPort": 389,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 123,
                        "ToPort": 123,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 135,
                        "ToPort": 135,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 445,
                        "ToPort": 445,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 636,
                        "ToPort": 636,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 3268,
                        "ToPort": 3269,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 5985,
                        "ToPort": 5985,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 9389,
                        "ToPort": 9389,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 49152,
                        "ToPort": 65535,
                        "CidrIp": {
                            "Fn::Sub": "${ADDnsIpAddresses}/32"
                        }
                    }
                ]
            }
        },
        "ONTAPSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow access to the Workload instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": -1,
                        "FromPort": -1,
                        "ToPort": -1,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "ICMP",
                        "FromPort": -1,
                        "ToPort": -1,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 139,
                        "ToPort": 139,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 4045,
                        "ToPort": 4045,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 111,
                        "ToPort": 111,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 2049,
                        "ToPort": 2049,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 10000,
                        "ToPort": 10000,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 635,
                        "ToPort": 635,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 4046,
                        "ToPort": 4046,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2049,
                        "ToPort": 2049,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 3260,
                        "ToPort": 3260,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 4046,
                        "ToPort": 4046,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 11104,
                        "ToPort": 11104,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 11105,
                        "ToPort": 11105,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 4049,
                        "ToPort": 4049,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 139,
                        "ToPort": 139,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 161,
                        "ToPort": 162,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 4045,
                        "ToPort": 4045,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 135,
                        "ToPort": 135,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 135,
                        "ToPort": 135,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 749,
                        "ToPort": 749,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 111,
                        "ToPort": 111,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 161,
                        "ToPort": 162,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 635,
                        "ToPort": 635,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": 137,
                        "ToPort": 137,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "SQLFSx1InstanceIP": {
            "Condition": "NOMAD",
            "Description": "Private IP of SqlFSx Instance",
            "Value": {
                "Fn::GetAtt": [
                    "SqlFSxInstance1",
                    "PrivateIp"
                ]
            }
        },
        "SQLFSx2InstanceIP": {
            "Condition": "NOMAD",
            "Description": "Private IP of SqlFSx Instance",
            "Value": {
                "Fn::GetAtt": [
                    "SqlFSxInstance2",
                    "PrivateIp"
                ]
            }
        },
        "SQLFSx1InstanceIPMAD": {
            "Condition": "MAD",
            "Description": "Private IP of SqlFSx Instance",
            "Value": {
                "Fn::GetAtt": [
                    "SqlFSxInstanceMAD1",
                    "PrivateIp"
                ]
            }
        },
        "SQLFSx2InstanceIPMAD": {
            "Condition": "MAD",
            "Description": "Private IP of SqlFSx Instance",
            "Value": {
                "Fn::GetAtt": [
                    "SqlFSxInstanceMAD2",
                    "PrivateIp"
                ]
            }
        }
    }
}
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a Multi-AZ, multi-subnet VPC infrastructure. You can also create additional private subnets. **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack from this template.)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Availability Zone Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCName",
                        "VPCCIDR",
                        "NumberOfSubnets",
                        "CreateNewRouteTablePerPrivateSubnet",
                        "PublicSubnet1CIDR",
                        "NumberOfPublicSubnets",
                        "PrivateSubnetCIDRs",
                        "VPCTenancy",
                        "VPCTagPairs",
                        "NumberOfVPCTags",
                        "SubnetTagPairs",
                        "NumberOfSubnetTags"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "EnableVPCFlowLog",
                        "LogGroupName",
                        "Ec2RoleArn"
                    ]
                }
            ],
            "ParameterLabels": {
                "VPCName": {
                    "default": "Name your VPC"
                },
                "NumberOfSubnets": {
                    "default": "number of private subnets you want"
                },
                "NumberOfPublicSubnets": {
                    "default": "number of public subnets you want"
                },
                "CreateNewRouteTablePerPrivateSubnet": {
                    "default": "Create a new route table for every private subnet?"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "PrivateSubnetCIDRs": {
                    "default": "Private subnet CIDRs"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCTenancy": {
                    "default": "VPC Tenancy"
                },
                "VPCTagPairs": {
                    "default": "Tag Key and Value pairs of VPC"
                },
                "NumberOfVPCTags": {
                    "default": "Number of VPC's Tags"
                },
                "SubnetTagPairs": {
                    "default": "Tag Key and Value pairs of Subnet"
                },
                "NumberOfSubnetTags": {
                    "default": "Number of Subnet's Tags"
                },
                "EnableVPCFlowLog": {
                    "default": "Boolean value to determine if VPC Flow logs should be enabled"
                },
                "LogGroupName": {
                    "default": "Log group name to publish VPC flow logs"
                },
                "Ec2RoleArn": {
                    "default": "Role arn that allows Ec2 to publish logs to cloudwatch"
                }
            }
        }
    },
    "Parameters": {
        "VPCName": {
            "Default": "",
            "Description": "Name your VPC",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your NAT instance after it launches. This is used only if the region does not support NAT gateways.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumberOfSubnets": {
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4"
            ],
            "Default": "2",
            "Description": "Number of Subnets to create in the VPC.",
            "Type": "String"
        },
        "NumberOfPublicSubnets": {
            "AllowedValues": [
                "0",
                "1"
            ],
            "Default": "1",
            "Description": "Number of public Subnets to create in the VPC. Creates max 1 public subnet by default.",
            "Type": "String"
        },
        "CreateNewRouteTablePerPrivateSubnet": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Create a new route table per private subnet (true) or use a common route table (false)",
            "Type": "String"
        },
        "PrivateSubnetCIDRs": {
            "Default": "10.0.0.0/20,10.0.16.0/20,10.0.32.0/20,10.0.48.0/20,10.0.64.0/20,10.0.80.0/20,10.0.96.0/20,10.0.112.0/20",
            "Description": "CIDR Block for private subnets.",
            "Type": "CommaDelimitedList"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public DMZ subnet 1",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "LogGroupName": {
            "Default": "",
            "Description": "Log Group Name.",
            "Type": "String"
        },
        "EnableVPCFlowLog": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "If VPC Flow Logs are required",
            "Type": "String"
        },
        "Ec2RoleArn": {
            "Default": "",
            "Description": "Role arn for EC2 instance profile that allows VPC flow logs to be published",
            "Type": "String"
        },
        "VPCTenancy": {
            "AllowedValues": [
                "default",
                "dedicated"
            ],
            "Default": "default",
            "Description": "The allowed tenancy of instances launched into the VPC",
            "Type": "String"
        },
        "VPCTagPairs": {
            "Default": "",
            "Description": "Tag Key and Value pairs of VPC",
            "Type": "CommaDelimitedList"
        },
        "NumberOfVPCTags": {
            "Default": "0",
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3"
            ],
            "Description": "Number of VPC tags",
            "Type": "String"
        },
        "SubnetTagPairs": {
            "Default": "",
            "Description": "Tag Key and Value pairs of Subnet",
            "Type": "CommaDelimitedList"
        },
        "NumberOfSubnetTags": {
            "Default": "0",
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3"
            ],
            "Description": "Number of Subnet tags",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AWSNATHVM": "amzn-ami-vpc-nat-hvm-2017.03.0.20170401-x86_64-ebs"
            },
            "us-gov-west-1": {
                "AWSNATHVM": "ami-3f0a8f5e"
            }
        }
    },
    "Conditions": {
        "VPCNameEmpty": {
            "Fn::Equals": [
                {
                    "Ref": "VPCName"
                },
                ""
            ]
        },
        "VPCLogsEnabled": {
            "Fn::Equals": [
                {
                    "Ref": "EnableVPCFlowLog"
                },
                "true"
            ]
        },
        "1SubnetTags": {
            "Fn::Or" : [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfSubnetTags"
                        },
                        "1"
                    ]
                },
                {
                    "Condition" : "2SubnetTags"
                }
            ]
        },
        "2SubnetTags": {
            "Fn::Or" : [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfSubnetTags"
                        },
                        "2"
                    ]
                },
                {
                    "Condition" : "3SubnetTags"
                }
            ]
        },
        "3SubnetTags": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfSubnetTags"
                },
                "3"
            ]
        },
        "1VPCTags": {
            "Fn::Or" : [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfVPCTags"
                        },
                        "1"
                    ]
                },
                {
                    "Condition" : "2VPCTags"
                }
            ]
        },
        "2VPCTags": {
            "Fn::Or" : [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfVPCTags"
                        },
                        "2"
                    ]
                },
                {
                    "Condition" : "3VPCTags"
                }
            ]
        },
        "3VPCTags": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfVPCTags"
                },
                "3"
            ]
        },
        "2Subnets": {
            "Fn::Or" : [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfSubnets"
                        },
                        "2"
                    ]
                },
                {
                    "Condition" : "3Subnets"
                }
            ]
        },
        "ShouldCreateRouteTableForSecondPrivateSubnet": {
            "Fn::And": [
                {
                    "Condition": "2Subnets"
                },
                {
                    "Condition": "ShouldCreateNewRouteTablePerPrivateSubnet"
                }
            ]
        },
        "3Subnets": {
            "Fn::Or" : [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfSubnets"
                        },
                        "3"
                    ]
                },
                {
                    "Condition" : "4Subnets"
                }
            ]
        },
        "ShouldCreateRouteTableForThirdPrivateSubnet": {
            "Fn::And": [
                {
                    "Condition": "3Subnets"
                },
                {
                    "Condition": "ShouldCreateNewRouteTablePerPrivateSubnet"
                }
            ]
        },
        "4Subnets": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfSubnets"
                },
                "4"
            ]  
        },
        "ShouldCreateRouteTableForFourthPrivateSubnet": {
            "Fn::And": [
                {
                    "Condition": "4Subnets"
                },
                {
                    "Condition": "ShouldCreateNewRouteTablePerPrivateSubnet"
                }
            ]
        },
        "ShouldCreateNewRouteTablePerPrivateSubnet": {
            "Fn::Equals": [
                {
                    "Ref": "CreateNewRouteTablePerPrivateSubnet"
                },
                "true"
            ]
        },
        "CreatePublicSubnet": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfPublicSubnets"
                },
                "1"
            ]
        },
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "NVirginiaRegionCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-east-1"
            ]
        }
    },
    "Resources": {
        "DHCPOptions": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": {
                    "Fn::If": [
                        "NVirginiaRegionCondition",
                        "ec2.internal",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ".compute.internal"
                                ]
                            ]
                        }
                    ]
                },
                "DomainNameServers": [
                    "AmazonProvidedDNS"
                ]
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "InstanceTenancy": {
                    "Ref": "VPCTenancy"
                },
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Fn::If": [
                            "VPCNameEmpty",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            {
                                "Key": "Name",
                                "Value": {
                                    "Ref": "VPCName"
                                }
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "1VPCTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "VPCTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "VPCTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2VPCTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "VPCTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "VPCTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3VPCTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "VPCTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "VPCTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "VPCFlowLog": {
            "Type": "AWS::EC2::FlowLog",
            "Condition": "VPCLogsEnabled",
            "Properties": {
                "DeliverLogsPermissionArn": {
                    "Ref": "Ec2RoleArn"
                },
                "LogGroupName": {
                    "Ref": "LogGroupName"
                },
                "ResourceId": {
                    "Ref": "VPC"
                },
                "ResourceType": "VPC",
                "TrafficType": "ALL"
            }
        },
        "VPCDHCPOptionsAssociation": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "DhcpOptionsId": {
                    "Ref": "DHCPOptions"
                }
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Fn::If": [
                            "VPCNameEmpty",
                            {
                                "Ref": "AWS::NoValue"
                            },
                            {
                                "Key": "Name",
                                "Value": {
                                    "Ref": "VPCName"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select" : [
                        "0",
                        { 
                            "Ref": "PrivateSubnetCIDRs" 
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 1"
                    },
                    {
                        "Fn::If": [
                            "1SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Condition": "2Subnets",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select" : [
                        "1",
                        { 
                            "Ref": "PrivateSubnetCIDRs" 
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 2"
                    },
                    {
                        "Fn::If": [
                            "1SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "PrivateSubnet3": {
            "Condition": "3Subnets",
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select" : [
                        "2",
                        { 
                            "Ref": "PrivateSubnetCIDRs" 
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 3A"
                    },
                    {
                        "Fn::If": [
                            "1SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "PrivateSubnet4": {
            "Condition": "4Subnets",
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::Select" : [
                        "3",
                        { 
                            "Ref": "PrivateSubnetCIDRs" 
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "3",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 4"
                    },
                    {
                        "Fn::If": [
                            "1SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Condition": "CreatePublicSubnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet1CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::Split": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public subnet 1"
                    },
                    {
                        "Fn::If": [
                            "1SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "0",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "1",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "2SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "2",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "3",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    },
                    {
                        "Fn::If": [
                            "3SubnetTags",
                            {
                                "Key": {
                                    "Fn::Select": [
                                        "4",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                },
                                "Value": {
                                    "Fn::Select": [
                                        "5",
                                        {
                                            "Ref": "SubnetTagPairs"
                                        }
                                    ]
                                }
                            },
                            {
                                "Ref": "AWS::NoValue"
                            }
                        ]
                    }
                ],
                "MapPublicIpOnLaunch": true
            }
        },
        "PrivateSubnet1RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 1"
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateSubnet1Route": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet1RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                }
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnet1RouteTable"
                }
            }
        },
        "PrivateSubnet2RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Condition": "ShouldCreateRouteTableForSecondPrivateSubnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 2"
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateSubnet2Route": {
            "Type": "AWS::EC2::Route",
            "Condition": "ShouldCreateRouteTableForSecondPrivateSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet2RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                }
            }
        },
        "PrivateSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition": "2Subnets",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Fn::If": [
                        "ShouldCreateNewRouteTablePerPrivateSubnet",
                        {
                            "Ref": "PrivateSubnet2RouteTable"
                        },
                        {
                            "Ref": "PrivateSubnet1RouteTable"
                        }
                    ]
                }
            }
        },
        "PrivateSubnet3RouteTable": {
            "Condition": "ShouldCreateRouteTableForThirdPrivateSubnet",
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 3"
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateSubnet3Route": {
            "Condition": "ShouldCreateRouteTableForThirdPrivateSubnet",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet3RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                }
            }
        },
        "PrivateSubnet3RouteTableAssociation": {
            "Condition": "3Subnets",
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet3"
                },
                "RouteTableId": {
                    "Fn::If": [
                        "ShouldCreateNewRouteTablePerPrivateSubnet",
                        {
                            "Ref": "PrivateSubnet3RouteTable"
                        },
                        {
                            "Ref": "PrivateSubnet1RouteTable"
                        }
                    ]
                }
            }
        },
        "PrivateSubnet4RouteTable": {
            "Condition": "ShouldCreateRouteTableForFourthPrivateSubnet",
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private subnet 4"
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateSubnet4Route": {
            "Condition": "ShouldCreateRouteTableForFourthPrivateSubnet",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet4RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                }
            }
        },
        "PrivateSubnet4RouteTableAssociation": {
            "Condition": "4Subnets",
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet4"
                },
                "RouteTableId": {
                    "Fn::If": [
                        "ShouldCreateNewRouteTablePerPrivateSubnet",
                        {
                            "Ref": "PrivateSubnet4RouteTable"
                        },
                        {
                            "Ref": "PrivateSubnet1RouteTable"
                        }
                    ]
                }
            }
        },
        "PublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Condition": "CreatePublicSubnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public Subnets"
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "PublicSubnetRoute": {
            "DependsOn": "VPCGatewayAttachment",
            "Type": "AWS::EC2::Route",
            "Condition": "CreatePublicSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Condition": "CreatePublicSubnet",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                }
            }
        },
        "NATEIP": {
            "DependsOn": "VPCGatewayAttachment",
            "Type": "AWS::EC2::EIP",
            "Condition": "CreatePublicSubnet",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "NATGateway": {
            "DependsOn": "VPCGatewayAttachment",
            "Type": "AWS::EC2::NatGateway",
            "Condition": "CreatePublicSubnet",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATEIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        }
    },
    "Outputs": {
        "NATEIP": {
            "Description": "NAT 1 IP address",
            "Condition": "CreatePublicSubnet",
            "Value": {
                "Ref": "NATEIP"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-NAT1EIP"
                }
            }
        },
        "PrivateSubnet1CIDR": {
            "Description": "Private subnet 1 CIDR",
            "Value": {
                "Fn::Select" : [
                    "0",
                    { 
                        "Ref": "PrivateSubnetCIDRs" 
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet1CIDR"
                }
            }
        },
        "PrivateSubnet1ID": {
            "Description": "Private subnet 1 ID",
            "Value": {
                "Ref": "PrivateSubnet1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet1ID"
                }
            }
        },
        "PrivateSubnet2CIDR": {
            "Condition": "2Subnets",
            "Description": "Private subnet 2 CIDR in Availability Zone 2",
            "Value": {
                "Fn::Select" : [
                    "1",
                    { 
                        "Ref": "PrivateSubnetCIDRs" 
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet2CIDR"
                }
            }
        },
        "PrivateSubnet2ID": {
            "Condition": "2Subnets",
            "Description": "Private subnet 2 ID",
            "Value": {
                "Ref": "PrivateSubnet2"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet2ID"
                }
            }
        },
        "PrivateSubnet3CIDR": {
            "Condition": "3Subnets",
            "Description": "Private subnet 3 CIDR",
            "Value": {
                "Fn::Select" : [
                    "2",
                    { 
                        "Ref": "PrivateSubnetCIDRs" 
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet3CIDR"
                }
            }
        },
        "PrivateSubnet3ID": {
            "Condition": "3Subnets",
            "Description": "Private subnet 3",
            "Value": {
                "Ref": "PrivateSubnet3"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet3ID"
                }
            }
        },
        "PrivateSubnet4CIDR": {
            "Condition": "4Subnets",
            "Description": "Private subnet 4 CIDR",
            "Value": {
                "Fn::Select" : [
                    "3",
                    { 
                        "Ref": "PrivateSubnetCIDRs" 
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet4CIDR"
                }
            }
        },
        "PrivateSubnet4ID": {
            "Condition": "4Subnets",
            "Description": "Private subnet 4",
            "Value": {
                "Ref": "PrivateSubnet4"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet4ID"
                }
            }
        },
        "PrivateSubnetAssignment": {
            "Value": {
                "Fn::If": [
                    "4Subnets",
                    {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1"
                                },
                                {
                                    "Ref": "PrivateSubnet2"
                                },
                                {
                                    "Ref": "PrivateSubnet3"
                                },
                                {
                                    "Ref": "PrivateSubnet4"
                                },
                                {
                                    "Ref": "PrivateSubnet4"
                                },
                                {
                                    "Ref": "PrivateSubnet4"
                                },
                                {
                                    "Ref": "PrivateSubnet4"
                                },
                                {
                                    "Ref": "PrivateSubnet4"
                                }
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1"
                                },
                                {
                                    "Fn::If": [
                                        "2Subnets",
                                        {
                                            "Ref": "PrivateSubnet2"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3Subnets",
                                        {
                                            "Ref": "PrivateSubnet3"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3Subnets",
                                        {
                                            "Ref": "PrivateSubnet3"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3Subnets",
                                        {
                                            "Ref": "PrivateSubnet3"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3Subnets",
                                        {
                                            "Ref": "PrivateSubnet3"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3Subnets",
                                        {
                                            "Ref": "PrivateSubnet3"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3Subnets",
                                        {
                                            "Ref": "PrivateSubnet3"
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            ]
                        ]
                    } 
                ]
            },
            "Description": "Assign 4 private subnets for each SQL nodes",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnetAssignment"
                }
            }
        },
        "PublicSubnet1CIDR": {
            "Description": "Public subnet 1 CIDR in Availability Zone 1",
            "Condition": "CreatePublicSubnet",
            "Value": {
                "Ref": "PublicSubnet1CIDR"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnet1CIDR"
                }
            }
        },
        "PublicSubnet1ID": {
            "Description": "Public subnet 1 ID in Availability Zone 1",
            "Condition": "CreatePublicSubnet",
            "Value": {
                "Ref": "PublicSubnet1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnet1ID"
                }
            }
        },
        "PrivateSubnet1RouteTable": {
            "Value": {
                "Ref": "PrivateSubnet1RouteTable"
            },
            "Description": "Private subnet 1 route table",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet1RouteTable"
                }
            }
        },
        "PrivateSubnet2RouteTable": {
            "Condition": "ShouldCreateRouteTableForSecondPrivateSubnet",
            "Value": {
                "Ref": "PrivateSubnet2RouteTable"
            },
            "Description": "Private subnet 2 route table",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet2RouteTable"
                }
            }
        },
        "PrivateSubnet3RouteTable": {
            "Condition": "ShouldCreateRouteTableForThirdPrivateSubnet",
            "Value": {
                "Ref": "PrivateSubnet3RouteTable"
            },
            "Description": "Private subnet 3 route table",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet3RouteTable"
                }
            }
        },
        "PrivateSubnet4RouteTable": {
            "Condition": "ShouldCreateRouteTableForFourthPrivateSubnet",
            "Value": {
                "Ref": "PrivateSubnet4RouteTable"
            },
            "Description": "Private subnet 4 route table",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet4RouteTable"
                }
            }
        },
        "PublicSubnetRouteTable": {
            "Condition": "CreatePublicSubnet",
            "Value": {
                "Ref": "PublicSubnetRouteTable"
            },
            "Description": "Public subnet route table",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnetRouteTable"
                }
            }
        },
        "VPCCIDR": {
            "Value": {
                "Ref": "VPCCIDR"
            },
            "Description": "VPC CIDR",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-VPCCIDR"
                }
            }
        },
        "VPCID": {
            "Value": {
                "Ref": "VPC"
            },
            "Description": "VPC ID",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-VPCID"
                }
            }
        }
    }
}
